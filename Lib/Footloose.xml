<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Footloose</name>
    </assembly>
    <members>
        <member name="T:Footloose.Collections.BinaryHeapBase`2">
            <summary>
            Represents a abstract binary heap datastructure.
            </summary>
            <typeparam name="TKey">The type of the keys in the heap.</typeparam>
            <typeparam name="TItem">The type of the items in the heap.</typeparam>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/> class that
            is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/> class that
            is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The initial number of elements that the queue can contain.</param>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.Clear">
            <summary>
            Removes all elements from the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.
            </summary>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.Contains(`1)">
            <summary>
            Determines whether an element is in the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.
            </summary>
            <param name="item">The item to locate in the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.</param>
            <returns>true if item is found in the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>; otherwise, false.</returns>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.Insert(`0,`1)">
            <summary>
            Insert a new item into the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>
            and reorder the heap.
            </summary>
            <param name="key">The key of the item.</param>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.Remove(`1)">
            <summary>
            Removes the specified item of the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>
            and reorder the heap.
            </summary>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.DequeueRootItem">
            <summary>
            Returns and removes the root item of the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>
            and reorder the heap.
            </summary>
            <returns>The root item of the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.</returns>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.PeekRootItem">
            <summary>
            Returns the root item in the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.
            </summary>
            <returns>The root item of the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.</returns>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.Heapify(System.Int32)">
            <summary>
            Heapify the heap.
            </summary>
            <param name="position">Position of the element to heapify.</param>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing. </param><param name="index">The zero-based index in <paramref name="array"/> at which copying begins. </param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null. </exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero. </exception><exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or- <paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>. </exception><exception cref="T:System.ArgumentException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:Footloose.Collections.BinaryHeapBase`2.Capacity">
            <summary>
            Gets or sets the total number of elements the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/> can hold without resizing.
            </summary>
        </member>
        <member name="P:Footloose.Collections.BinaryHeapBase`2.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Footloose.Collections.BinaryHeapBase`2.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Footloose.Collections.BinaryHeapBase`2.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
            <returns>
            true if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe); otherwise, false.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Footloose.Collections.BinaryHeapBase`2.BinaryHeapEnumerator`2">
            <summary>
            The enumerator for the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.
            </summary>
            <typeparam name="TKey">The type of the keys in the heap.</typeparam>
            <typeparam name="TItem">The type of the items in the heap.</typeparam>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.BinaryHeapEnumerator`2.#ctor(System.Collections.Generic.IEnumerator{Footloose.Collections.HeapItem{`2,`3}})">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/> class with
            the specified <see cref="T:System.Collections.Generic.IEnumerator`1"/>.
            </summary>
            <param name="enumerator">The <see cref="T:System.Collections.Generic.IEnumerator`1"/>.</param>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.BinaryHeapEnumerator`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.BinaryHeapEnumerator`2.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Footloose.Collections.BinaryHeapBase`2.BinaryHeapEnumerator`2.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:Footloose.Collections.BinaryHeapBase`2.BinaryHeapEnumerator`2.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="P:Footloose.Collections.BinaryHeapBase`2.BinaryHeapEnumerator`2.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element.-or- The collection was modified after the enumerator was created.</exception><filterpriority>2</filterpriority>
        </member>
        <member name="T:Footloose.Collections.BinaryMaxHeap`2">
            <summary>
            Represents a binary max heap datastructure.
            </summary>
            <typeparam name="TKey">The type of the keys in the heap.</typeparam>
            <typeparam name="TItem">The type of the items in the heap.</typeparam>
        </member>
        <member name="M:Footloose.Collections.BinaryMaxHeap`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Collections.BinaryMaxHeap`2"/> class that
            is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:Footloose.Collections.BinaryMaxHeap`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Collections.BinaryMaxHeap`2"/> class that
            is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The initial number of elements that the queue can contain.</param>
        </member>
        <member name="M:Footloose.Collections.BinaryMaxHeap`2.Heapify(System.Int32)">
            <summary>
            Heapify the max heap.
            </summary>
            <param name="position">Position of the element to heapify.</param>
        </member>
        <member name="T:Footloose.Collections.HeapItem`2">
            <summary>
            Represents a item in the <see cref="T:Footloose.Collections.BinaryHeapBase`2"/>.
            </summary>
            <typeparam name="TKey">The type of the keys in the heap.</typeparam>
            <typeparam name="TItem">The type of the items in the heap.</typeparam>
        </member>
        <member name="M:Footloose.Collections.HeapItem`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Collections.HeapItem`2"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Collections.HeapItem`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Collections.HeapItem`2"/> class
            with the specified key and item.
            </summary>
            <param name="key">The key of the heap item.</param>
            <param name="item">The value oft the heap item.</param>
        </member>
        <member name="M:Footloose.Collections.HeapItem`2.CompareTo(Footloose.Collections.HeapItem{`0,`1})">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>. 
            </returns>
            <param name="other">An object to compare with this object.</param>
        </member>
        <member name="P:Footloose.Collections.HeapItem`2.Key">
            <summary>
            Gets or sets the value of the key.
            </summary>
        </member>
        <member name="P:Footloose.Collections.HeapItem`2.Item">
            <summary>
            Gets or sets the value of the item.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.AuthenticatedOnlyAuthorizationProviderConfigurationElement">
            <summary>
             Represents a configuration element for <see cref="T:Footloose.Security.AuthenticatedOnlyAuthorizationProvider"/> within a configuration file.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.AuthorizationProviderConfigurationElementBase">
            <summary>
             Represents a configuration element for a authorization provider within a configuration file.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementBase.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>
            Gets a value indicating whether an unknown attribute is encountered during deserialization.
            </summary>
            <param name="name">The name of the unrecognized attribute.</param>
            <param name="value">The value of the unrecognized attribute.</param>
            <returns>true when an unknown attribute is encountered while deserializing; otherwise, false.</returns>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementBase.GetCustomProperty``1(System.String,``0)">
            <summary>
            Gets the value of the custom property.
            </summary>
            <param name="name">The name of the custom property.</param>
            <param name="defaultValue">The default value of the custom property.</param>
            <returns>The value of the custom property; otherwise, the default value.</returns>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementBase.SetCustomProperty``1(System.String,``0)">
            <summary>
            Sets the value of the custom property.
            </summary>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value of the custom property.</param>
        </member>
        <member name="P:Footloose.Configuration.AuthorizationProviderConfigurationElementBase.Name">
            <summary>
             Gets or sets the unique name of the configuration element.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.AuthorizationProviderConfigurationElementBase.Type">
            <summary>
             Gets or sets the type of the <see cref="T:Footloose.Security.IAuthorizationProvider"/>.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection">
            <summary>
             Represents a configuration element containing a collection <see cref="T:Footloose.Configuration.AuthorizationProviderConfigurationElementBase"/> elements.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.SerializerConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.Add(Footloose.Configuration.AuthorizationProviderConfigurationElementBase)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.Contains(Footloose.Configuration.AuthorizationProviderConfigurationElementBase)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.CopyTo(Footloose.Configuration.AuthorizationProviderConfigurationElementBase[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is
            equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source
            <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/>
            to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.Remove(Footloose.Configuration.AuthorizationProviderConfigurationElementBase)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.IndexOf(Footloose.Configuration.AuthorizationProviderConfigurationElementBase)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.Insert(System.Int32,Footloose.Configuration.AuthorizationProviderConfigurationElementBase)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the
            <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid
            index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the 
            <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.</param>
        </member>
        <member name="T:Footloose.Configuration.DefaultAuthorizationProviderConfigurationElement">
            <summary>
             Represents a configuration element for <see cref="T:Footloose.Security.DefaultAuthorizationProvider"/> within a configuration file.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Fluent.AuthenticatedOnlyAuthorizationProviderConfiguration">
            <summary>
            Fluent configuration class for the <see cref="T:Footloose.Security.AuthenticatedOnlyAuthorizationProvider"/>.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Fluent.FluentAuthorizationProviderConfigurationBase`1">
            <summary>
            Abstract base class for fluent authorization provider configurations.
            </summary>
            <typeparam name="TThisConfiguration"></typeparam>
        </member>
        <member name="T:Footloose.Configuration.Fluent.FluentConfigurationBase`1">
            <summary>
            Abstract base class for fluent configurations
            </summary>
            <typeparam name="TThisConfiguration"></typeparam>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfigurationBase`1.GetNextBooleanValue">
            <summary>
            Gets the next boolean value.
            </summary>
            <returns>false if DoNot was used; otherwise true.</returns>
        </member>
        <member name="P:Footloose.Configuration.Fluent.FluentConfigurationBase`1.DoNot">
            <summary>
            Negates the next boolean value.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Fluent.IFluentAuthorizationProviderConfiguration">
            <summary>
            Interface for fluent authorization provider configurations
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.IFluentAuthorizationProviderConfiguration.Apply(Footloose.Configuration.SecurityConfigurationSection)">
            <summary>
            Applies the authorization provider configuration data to the <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/> configuration.</param>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentAuthorizationProviderConfigurationBase`1.Apply(Footloose.Configuration.SecurityConfigurationSection)">
            <summary>
            Applies the transport channel configuration data to the <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/> configuration.</param>
        </member>
        <member name="M:Footloose.Configuration.Fluent.AuthenticatedOnlyAuthorizationProviderConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.AuthenticatedOnlyAuthorizationProviderConfiguration"/> class
            with default settings.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.AuthenticatedOnlyAuthorizationProviderConfiguration.Apply(Footloose.Configuration.SecurityConfigurationSection)">
            <summary>
            Applies the transport channel configuration data to the <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/> configuration.</param>
        </member>
        <member name="P:Footloose.Configuration.Fluent.AuthenticatedOnlyAuthorizationProviderConfiguration.Standard">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.AuthenticatedOnlyAuthorizationProviderConfiguration"/> class
            with default settings.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Fluent.DefaultAuthorizationProviderConfiguration">
            <summary>
            Fluent configuration class for the <see cref="T:Footloose.Security.DefaultAuthorizationProvider"/>.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.DefaultAuthorizationProviderConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.DefaultAuthorizationProviderConfiguration"/> class
            with default settings.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.DefaultAuthorizationProviderConfiguration.Apply(Footloose.Configuration.SecurityConfigurationSection)">
            <summary>
            Applies the transport channel configuration data to the <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/> configuration.</param>
        </member>
        <member name="P:Footloose.Configuration.Fluent.DefaultAuthorizationProviderConfiguration.Standard">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.DefaultAuthorizationProviderConfiguration"/> class
            with default settings.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.SecurityConfigurationSection">
            <summary>
             Represents a security configuration section within a configuration file.
            </summary>
        </member>
        <member name="F:Footloose.Configuration.SecurityConfigurationSection.ConfigurationSectionName">
            <summary>
            Name of this configuration section.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.SecurityConfigurationSection.GetConfiguration">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/> from the
            application configuration.
            </summary>
            <returns>A <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/> object.</returns>
        </member>
        <member name="P:Footloose.Configuration.SecurityConfigurationSection.DefaultAuthorizationProvider">
            <summary>
             Gets or sets the name of the default <see cref="T:Footloose.Configuration.AuthorizationProviderConfigurationElementBase"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.SecurityConfigurationSection.AuthorizationProvider">
            <summary>
             Gets the <see cref="T:Footloose.Configuration.AuthorizationProviderConfigurationElementCollection"/> of <see cref="T:Footloose.Configuration.AuthorizationProviderConfigurationElementBase"/> objects.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Fluent.AutoServiceContractContainer">
            <summary>
            A auto configuration container for service contracts.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Fluent.ServiceContractContainer">
            <summary>
            A configuration container for service contracts.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.ServiceContractContainer.RegisterOfType``1">
            <summary>
            Registers a single service contract represented by the specified <see cref="T:System.Type"/>.
            A service contract is used on the service side to specify what the service exposes to callers.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the service contract.</typeparam>
            <returns><see cref="T:Footloose.Configuration.Fluent.ServiceContractContainer" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.ServiceContractContainer.RegisterOfType(System.Type)">
            <summary>
            Registers a single service contract represented by the specified <see cref="T:System.Type"/>.
            A service contract is used on the service side to specify what the service exposes to callers.
            </summary>
            <param name="serviceContract">The <see cref="T:System.Type"/> of the service contract.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.ServiceContractContainer" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.ServiceContractContainer.GetServiceContracts">
            <summary>
            Gets a list auf all registered service contracts.
            </summary>
            <returns>A list of <see cref="T:System.Type"/> that
            contains the registered service contracts.</returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.AutoServiceContractContainer.RegisterFromAssemblyOf``1">
            <summary>
            Automatically enregister service contracts from the assembly that contains <typeparamref name="T"/>.
            A service contract is used on the service side to specify what the service exposes to callers.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> of the <see cref="T:System.Reflection.Assembly"/>
            you want to register service contracts from.</typeparam>
            <returns><see cref="T:Footloose.Configuration.Fluent.AutoServiceContractContainer" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.AutoServiceContractContainer.RegisterFromAssembly(System.Reflection.Assembly)">
            <summary>
            Automatically enregister service contracts from the provided assembly.
            A service contract is used on the service side to specify what the service exposes to callers.
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> you want
            to register service contracts from.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.AutoServiceContractContainer" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.AutoServiceContractContainer.Where(System.Func{System.Type,System.Boolean})">
            <summary>
            Filters the service contracts by the provided predicate.
            </summary>
            <param name="predicate">A function to test each service contract for a condition.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.AutoServiceContractContainer" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.AutoServiceContractContainer.GetServiceContracts">
            <summary>
            Gets a list auf all registered service contracts.
            </summary>
            <returns>A list of <see cref="T:System.Type"/> that
            contains the registered service contracts.</returns>
        </member>
        <member name="T:Footloose.Configuration.ConfigurationElementEnumerator`1">
            <summary>
            The enumerator for the <see cref="T:Footloose.Configuration.ConfigurationElementEnumerator`1"/>.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.ConfigurationElementEnumerator`1.#ctor(System.Collections.IEnumerator)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.ConfigurationElementEnumerator`1"/> class with
            the specified <see cref="T:System.Collections.IEnumerator"/>.
            </summary>
            <param name="enumerator">The <see cref="T:System.Collections.IEnumerator"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.ConfigurationElementEnumerator`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Footloose.Configuration.ConfigurationElementEnumerator`1.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:Footloose.Configuration.ConfigurationElementEnumerator`1.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:Footloose.Configuration.ConfigurationElementEnumerator`1.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="P:Footloose.Configuration.ConfigurationElementEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The enumerator is positioned before the first element of the collection or after the last element.-or- The collection was modified after the enumerator was created.</exception><filterpriority>2</filterpriority>
        </member>
        <member name="T:Footloose.Configuration.CredentialConfigurationElement">
            <summary>
            Represents a configuration element for a <see cref="T:System.Net.NetworkCredential"/> object within a configuration file.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.CredentialConfigurationElement"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElement.#ctor(System.Net.NetworkCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.CredentialConfigurationElement"/> class
            with the specified <see cref="T:System.Net.NetworkCredential"/>.
            </summary>
            <param name="credentials">The <see cref="T:System.Net.NetworkCredential"/> object.</param>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.CredentialConfigurationElement"/> class
            with the specified user name and password.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.CredentialConfigurationElement"/> class
            with the specified user name, password, and domain.
            </summary>
            <param name="userName">The user name associated with the credentials.</param>
            <param name="password">The password for the user name associated with the credentials.</param>
            <param name="domain">The domain associated with these credentials.</param>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElement.Name">
            <summary>
             Gets or sets the unique name of the configuration element.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElement.UserName">
            <summary>
             Gets or sets the user name associated with the credentials.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElement.Password">
            <summary>
             Gets or sets the password for the user name associated with the credentials.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElement.Domain">
            <summary>
             Gets or sets the domain or computer name that verifies the credentials.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.CredentialConfigurationElementCollection">
            <summary>
             Represents a configuration element containing a collection <see cref="T:Footloose.Configuration.CredentialConfigurationElement"/> elements.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.CredentialConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.Add(Footloose.Configuration.CredentialConfigurationElement)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.Contains(Footloose.Configuration.CredentialConfigurationElement)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.CopyTo(Footloose.Configuration.CredentialConfigurationElement[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is
            equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source
            <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/>
            to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.Remove(Footloose.Configuration.CredentialConfigurationElement)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.IndexOf(Footloose.Configuration.CredentialConfigurationElement)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.Insert(System.Int32,Footloose.Configuration.CredentialConfigurationElement)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the
            <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.CredentialConfigurationElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid
            index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElementCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the 
            <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.CredentialConfigurationElementCollection.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.</param>
        </member>
        <member name="T:Footloose.Configuration.Fluent.FluentConfiguration">
            <summary>
            Fluent configuration API for Footloose
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.FluentConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.#ctor(Footloose.Configuration.FootlooseConfigurationSectionGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.FluentConfiguration"/> class
            with the specified configuration.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.ExposeConfiguration(System.Action{Footloose.Configuration.FootlooseConfigurationSectionGroup})">
            <summary>
            Expose the <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> for raw altering.
            </summary>
            <param name="configure">The lambda expression to alter the configuration.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration"/></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.CreateFootlooseConnection">
            <summary>
            Verify's the configuration and creates a new <see cref="T:Footloose.IFootlooseConnection"/> instance.
            </summary>
            <returns>A new <see cref="T:Footloose.IFootlooseConnection"/> instance from supplied settings.</returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.SerializerOfType(System.Type)">
            <summary>
            Specify the Serializer.
            </summary>
            <param name="serializerType">Serializer type.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.SerializerOfType``1">
            <summary>
            Specify the Serializer.
            </summary>
            <typeparam name="T">Serializer type.</typeparam>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.ServiceLocator(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            Specify the <see cref="T:Microsoft.Practices.ServiceLocation.IServiceLocator" /> implementation.
            </summary>
            <param name="serviceLocator"><see cref="T:Microsoft.Practices.ServiceLocation.IServiceLocator" /> implementation.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.ServiceContracts(System.Action{Footloose.Configuration.Fluent.ServiceContractConfiguration})">
            <summary>
            Specify which types should be exposed as service contracts.
            </summary>
            <param name="serviceContracts">The lambda expression to alter the configuration.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.TransportChannel(Footloose.Configuration.Fluent.IFluentTransportChannelConfiguration)">
            <summary>
            Specify transport channel settings.
            </summary>
            <param name="config"><see cref="T:Footloose.Configuration.Fluent.IFluentTransportChannelConfiguration" /></param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.TransportChannel(System.Func{Footloose.Configuration.Fluent.IFluentTransportChannelConfiguration})">
            <summary>
            Specify transport channel settings.
            </summary>
            <param name="config">Lambda or delegate returning transport channel configuration.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.AuthorizationProvider(Footloose.Configuration.Fluent.IFluentAuthorizationProviderConfiguration)">
            <summary>
            Specify authorization provider settings.
            </summary>
            <param name="config"><see cref="T:Footloose.Configuration.Fluent.IFluentAuthorizationProviderConfiguration" /></param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentConfiguration.AuthorizationProvider(System.Func{Footloose.Configuration.Fluent.IFluentAuthorizationProviderConfiguration})">
            <summary>
            Specify authorization provider settings.
            </summary>
            <param name="config">Lambda or delegate returning authorization provider configuration.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentConfiguration" /></returns>
        </member>
        <member name="T:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1">
            <summary>
            Abstract base class for fluent transport channel configurations.
            </summary>
            <typeparam name="TThisConfiguration"></typeparam>
        </member>
        <member name="T:Footloose.Configuration.Fluent.IFluentTransportChannelConfiguration">
            <summary>
            Interface for fluent transport channel configurations
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.IFluentTransportChannelConfiguration.Apply(Footloose.Configuration.TransportChannelConfigurationSection)">
            <summary>
            Applies the transport channel configuration data to the <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/> configuration.</param>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1.EndpointIdentifier(System.String)">
            <summary>
            Specify the identifier of this <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            </summary>
            <param name="identifier">The identifier of this <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1"/></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1.TimeOut(System.Int32)">
            <summary>
            Specify the length of time, in milliseconds, before a request times out.
            </summary>
            <param name="value">The timeout in milliseconds.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1"/></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1.MaxMessageBodyLength(System.Int32)">
            <summary>
            Specify the length of time, in milliseconds, before a request times out.
            </summary>
            <param name="length">The timeout in milliseconds.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1"/></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1.Priority(System.Int32)">
            <summary>
            Specify the priority for this communication endpoint.
            The value must be an integer between -128 and +127.
            Default is 10.
            </summary>
            <param name="value">A value between -128 and +127.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1"/></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.FluentTransportChannelConfigurationBase`1.Apply(Footloose.Configuration.TransportChannelConfigurationSection)">
            <summary>
            Applies the transport channel configuration data to the <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/> configuration.</param>
        </member>
        <member name="T:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration">
            <summary>
            Fluent configuration class for the <see cref="T:Footloose.TransportChannels.Remoting.RemotingTransportChannel"/>.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration"/> class
            with default settings.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration.UseConfigFile(System.String)">
            <summary>
            Specify a remoting configuration file name.
            This shouldn't be necessary if you don't want to use the
            .NET remoting HTTP or TCP channels.
            </summary>
            <param name="fileName">The name of the remoting configuration file. Can be null.</param>
            <returns><see cref="T:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration"/></returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration.Apply(Footloose.Configuration.TransportChannelConfigurationSection)">
            <summary>
            Applies the transport channel configuration data to the <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/> configuration.</param>
        </member>
        <member name="P:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration.Standard">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.RemotingTransportChannelConfiguration"/> class
            with default settings.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.RemotingTransportChannelConfigurationElement">
            <summary>
             Represents a configuration element for a .NET Remoting transport channel within a configuration file.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.TransportChannelConfigurationElementBase">
            <summary>
             Represents a configuration element for a transport channel within a configuration file.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementBase.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>
            Gets a value indicating whether an unknown attribute is encountered during deserialization.
            </summary>
            <param name="name">The name of the unrecognized attribute.</param>
            <param name="value">The value of the unrecognized attribute.</param>
            <returns>true when an unknown attribute is encountered while deserializing; otherwise, false.</returns>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementBase.GetCustomProperty``1(System.String,``0)">
            <summary>
            Gets the value of the custom property.
            </summary>
            <param name="name">The name of the custom property.</param>
            <param name="defaultValue">The default value of the custom property.</param>
            <returns>The value of the custom property; otherwise, the default value.</returns>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementBase.SetCustomProperty``1(System.String,``0)">
            <summary>
            Sets the value of the custom property.
            </summary>
            <param name="name">The name of the custom property.</param>
            <param name="value">The value of the custom property.</param>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementBase.Name">
            <summary>
             Gets or sets the unique name of the configuration element.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementBase.Type">
            <summary>
             Gets or sets the type of the <see cref="T:Footloose.TransportChannels.ITransportChannel"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementBase.Timeout">
            <summary>
             Gets or sets the length of time, in milliseconds, before a request times out.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementBase.MaxMessageBodyLength">
            <summary>
             Gets or sets the maximum length of the message body. The serializised message body must not exceed the
             specified maximum message body lenght; otherwise it'll be strip down into several smaller chunks
             and send separately.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementBase.Priority">
            <summary>
             Gets or sets the priority for this communication endpoint.
             The value must be an integer between -128 and +127.
             Default is 10.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.RemotingTransportChannelConfigurationElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.RemotingTransportChannelConfigurationElement"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.RemotingTransportChannelConfigurationElement.#ctor(Footloose.Configuration.TransportChannelConfigurationElementBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.RemotingTransportChannelConfigurationElement"/> class
            using values from the provided <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementBase"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementBase"/> to get values from.</param>
        </member>
        <member name="P:Footloose.Configuration.RemotingTransportChannelConfigurationElement.RemotingConfigFile">
            <summary>
             Gets or sets a remoting configuration file name.
             This shouldn't be necessary if you don't want to use the
             .NET remoting HTTP or TCP channels.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.SerializerConfigurationElement">
            <summary>
            Represents a configuration element for a <see cref="T:Footloose.Serialization.ISerializer"/> within a configuration file.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationElement.Name">
            <summary>
             Gets or sets the unique name of the configuration element.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationElement.Type">
            <summary>
             Gets or sets the type of the serializer.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.SerializerConfigurationElementCollection">
            <summary>
             Represents a configuration element containing a collection <see cref="T:Footloose.Configuration.SerializerConfigurationElement"/> elements.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.SerializerConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.Add(Footloose.Configuration.SerializerConfigurationElement)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.Contains(Footloose.Configuration.SerializerConfigurationElement)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.CopyTo(Footloose.Configuration.SerializerConfigurationElement[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is
            equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source
            <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/>
            to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.Remove(Footloose.Configuration.SerializerConfigurationElement)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.IndexOf(Footloose.Configuration.SerializerConfigurationElement)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.Insert(System.Int32,Footloose.Configuration.SerializerConfigurationElement)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the
            <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid
            index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationElementCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the 
            <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationElementCollection.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.</param>
        </member>
        <member name="T:Footloose.Configuration.SerializerConfigurationSection">
            <summary>
            Represents a serializer configuration section within a configuration file.
            </summary>
        </member>
        <member name="F:Footloose.Configuration.SerializerConfigurationSection.ConfigurationSectionName">
            <summary>
            Name of this configuration section.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.SerializerConfigurationSection.GetConfiguration">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.SerializerConfigurationSection"/> from the
            application configuration.
            </summary>
            <returns>A <see cref="T:Footloose.Configuration.SerializerConfigurationSection"/> object.</returns>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationSection.DefaultSerializer">
            <summary>
             Gets or sets the name of the default <see cref="T:Footloose.Configuration.SerializerConfigurationElement"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.SerializerConfigurationSection.Types">
            <summary>
             Gets the <see cref="T:Footloose.Configuration.SerializerConfigurationElementCollection"/> of <see cref="T:Footloose.Configuration.SerializerConfigurationElement"/> objects.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Fluent.ServiceContractConfiguration">
            <summary>
            Fluent service contract configuration.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.ServiceContractConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.Fluent.ServiceContractContainer"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Fluent.ServiceContractConfiguration.GetServiceContracts">
            <summary>
            Gets a list auf all registered service contracts.
            </summary>
            <returns>A list of <see cref="T:System.Type"/> that
            contains the registered service contracts.</returns>
        </member>
        <member name="M:Footloose.Configuration.Fluent.ServiceContractConfiguration.Apply(Footloose.Configuration.ServiceContractConfigurationSection)">
            <summary>
            Applies any service contract to the <see cref="T:Footloose.Configuration.ServiceContractConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.ServiceContractConfigurationSection"/> configuration.</param>
        </member>
        <member name="P:Footloose.Configuration.Fluent.ServiceContractConfiguration.ServiceContract">
            <summary>
            Gets the service contracts.
            A service contract is used on the service side to specify what the service exposes to callers.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.Fluent.ServiceContractConfiguration.AutoServiceContract">
            <summary>
            Gets the automatic service contracts.
            A service contract is used on the service side to specify what the service exposes to callers.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.ServiceContractConfigurationElement">
            <summary>
             Represents a configuration element for a service contract within a configuration file.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.ServiceContractConfigurationElement"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Configuration.ServiceContractConfigurationElement"/> class
            with the specified type name if the service contract.
            </summary>
            <param name="type">Type name of the service contract.</param>
        </member>
        <member name="P:Footloose.Configuration.ServiceContractConfigurationElement.Type">
            <summary>
             Gets or sets the type of a service contract, exposed by this service.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.ServiceContractConfigurationElementCollection">
            <summary>
             Represents a configuration element containing a collection <see cref="T:Footloose.Configuration.ServiceContractConfigurationElement"/> elements.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.SerializerConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.Add(Footloose.Configuration.ServiceContractConfigurationElement)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.Contains(Footloose.Configuration.ServiceContractConfigurationElement)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.CopyTo(Footloose.Configuration.ServiceContractConfigurationElement[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is
            equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source
            <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/>
            to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.Remove(Footloose.Configuration.ServiceContractConfigurationElement)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.IndexOf(Footloose.Configuration.ServiceContractConfigurationElement)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.Insert(System.Int32,Footloose.Configuration.ServiceContractConfigurationElement)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the
            <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid
            index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.ServiceContractConfigurationElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.ServiceContractConfigurationElementCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Footloose.Configuration.ServiceContractConfigurationElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the 
            <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.ServiceContractConfigurationElementCollection.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.</param>
        </member>
        <member name="T:Footloose.Configuration.ServiceContractConfigurationSection">
            <summary>
             Represents a serializer configuration section within a configuration file.
            </summary>
        </member>
        <member name="F:Footloose.Configuration.ServiceContractConfigurationSection.ConfigurationSectionName">
            <summary>
            Name of this configuration section.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.ServiceContractConfigurationSection.GetConfiguration">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.ServiceContractConfigurationSection"/> from the
            application configuration.
            </summary>
            <returns>A <see cref="T:Footloose.Configuration.ServiceContractConfigurationSection"/> object.</returns>
        </member>
        <member name="P:Footloose.Configuration.ServiceContractConfigurationSection.Types">
            <summary>
             Gets the <see cref="T:Footloose.Configuration.ServiceContractConfigurationElementCollection"/> of <see cref="T:Footloose.Configuration.ServiceContractConfigurationElement"/> objects.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.FootlooseConfigurationSectionGroup">
            <summary>
             Represents a group of Footloose related configuration sections within a configuration file.
            </summary>
        </member>
        <member name="F:Footloose.Configuration.FootlooseConfigurationSectionGroup.ConfigurationSectionGroupName">
            <summary>
             Name of this configuration section group.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.FootlooseConfigurationSectionGroup.GetConfiguration">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> from the
            application configuration.
            </summary>
            <returns>A <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> object.</returns>
        </member>
        <member name="M:Footloose.Configuration.FootlooseConfigurationSectionGroup.GetConfiguration(System.Configuration.ConfigurationUserLevel)">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> from the
            application configuration with the specified <see cref="T:System.Configuration.ConfigurationUserLevel"/>.
            </summary>
            <param name="userLevel">The <see cref="T:System.Configuration.ConfigurationUserLevel"/> for which you are opening the configuration.</param>
            <returns>A <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> object.</returns>
        </member>
        <member name="M:Footloose.Configuration.FootlooseConfigurationSectionGroup.GetConfiguration(System.Configuration.Configuration)">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> from the
            provided <see cref="T:System.Configuration.Configuration"/> object.
            </summary>
            <param name="configuration">The <see cref="T:System.Configuration.Configuration"/> object
            to get the <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> from.</param>
            <returns>A <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> object.</returns>
        </member>
        <member name="P:Footloose.Configuration.FootlooseConfigurationSectionGroup.TransportChannel">
            <summary>
             Gets or sets the <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.FootlooseConfigurationSectionGroup.ServiceContracts">
            <summary>
             Gets or sets the <see cref="T:Footloose.Configuration.ServiceContractConfigurationSection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.FootlooseConfigurationSectionGroup.Serializer">
            <summary>
             Gets or sets the <see cref="T:Footloose.Configuration.SerializerConfigurationSection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.FootlooseConfigurationSectionGroup.Security">
            <summary>
             Gets or sets the <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/>.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.TransportChannelConfigurationElementCollection">
            <summary>
             Represents a configuration element containing a collection <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementBase"/> elements.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.CreateNewElement">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.SerializerConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.Add(Footloose.Configuration.TransportChannelConfigurationElementBase)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.Contains(Footloose.Configuration.TransportChannelConfigurationElementBase)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.CopyTo(Footloose.Configuration.TransportChannelConfigurationElementBase[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="array"/> is multidimensional.-or-<paramref name="arrayIndex"/> is
            equal to or greater than the length of <paramref name="array"/>.-or-The number of elements in the source
            <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/>
            to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.Remove(Footloose.Configuration.TransportChannelConfigurationElementBase)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.IndexOf(Footloose.Configuration.TransportChannelConfigurationElementBase)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.Insert(System.Int32,Footloose.Configuration.TransportChannelConfigurationElementBase)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the
            <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid
            index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The property is set and the 
            <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationElementCollection.Item(System.Object)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <returns>
            The element with the specified key.
            </returns>
            <param name="key">The key of the element to get or set.</param>
        </member>
        <member name="T:Footloose.Configuration.TransportChannelConfigurationSection">
            <summary>
             Represents a transport channel configuration section within a configuration file.
            </summary>
        </member>
        <member name="F:Footloose.Configuration.TransportChannelConfigurationSection.ConfigurationSectionName">
            <summary>
            Name of this configuration section.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.TransportChannelConfigurationSection.GetConfiguration">
            <summary>
            Creates a new <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/> from the
            application configuration.
            </summary>
            <returns>A <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/> object.</returns>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationSection.DefaultTransportChannel">
            <summary>
             Gets or sets the name of the default <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementBase"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationSection.EndpointIdentifier">
            <summary>
             Gets or sets the identifier of this <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationSection.TransportChannels">
            <summary>
             Gets the <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementCollection"/> of <see cref="T:Footloose.Configuration.TransportChannelConfigurationElementBase"/> objects.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.TransportChannelConfigurationSection.Credentials">
            <summary>
             Gets the <see cref="T:Footloose.Configuration.CredentialConfigurationElementCollection"/> of <see cref="T:Footloose.Configuration.CredentialConfigurationElement"/> objects.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Wiring.ApplicationBinder">
            <summary>
            This class is responsible to wire the Footloose application with the Autofac IoC container.
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Wiring.IApplicationBinder">
            <summary>
            Interface for a class that is responsible to wire the Footloose application.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Wiring.IApplicationBinder.Wire">
            <summary>
            Application wire. Configures the IoC container.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Wiring.IApplicationBinder.Dewire">
            <summary>
            Application dewire. Disposes the IoC container.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.Wiring.IApplicationBinder.Container">
            <summary>
            Gets the current <see cref="T:Autofac.IContainer"/>
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Wiring.ApplicationBinder.Wire">
            <summary>
            Application wire. Configures the IoC container.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Wiring.ApplicationBinder.Dewire">
            <summary>
            Application dewire. Disposes the IoC container.
            </summary>
        </member>
        <member name="M:Footloose.Configuration.Wiring.ApplicationBinder.InjectDependenciesIntoExtensions">
            <summary>
            Injects dependencies via property injection into known extension method classes.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.Wiring.ApplicationBinder.Container">
            <summary>
            Gets the current <see cref="T:Autofac.IContainer"/>
            </summary>
        </member>
        <member name="T:Footloose.Configuration.Wiring.ITypeMetadata">
            <summary>
            Interface with strongly typed metadata for Autofac configuration,
            add a <see cref="T:System.Type"/> information for registered components.
            </summary>
        </member>
        <member name="P:Footloose.Configuration.Wiring.ITypeMetadata.Type">
            <summary>
            Gets the <see cref="T:System.Type"/> associated with a registered component.
            </summary>
        </member>
        <member name="T:Footloose.CommunicationEndpointNotFoundException">
            <summary>
            Represents errors that occur when no proper <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>
            is found during auto service discovery for a method call.
            </summary>
        </member>
        <member name="T:Footloose.FootlooseException">
            <summary>
            Abstract base class for all Footloose related exceptions.
            </summary>
        </member>
        <member name="M:Footloose.FootlooseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.FootlooseException"/> class.
            </summary>
        </member>
        <member name="M:Footloose.FootlooseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.FootlooseException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Footloose.FootlooseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.FootlooseException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Footloose.FootlooseException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.FootlooseException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.FootlooseException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.FootlooseException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.FootlooseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="M:Footloose.CommunicationEndpointNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.CommunicationEndpointNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Footloose.CommunicationEndpointNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.CommunicationEndpointNotFoundException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Footloose.CommunicationEndpointNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.CommunicationEndpointNotFoundException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Footloose.CommunicationEndpointNotFoundException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.CommunicationEndpointNotFoundException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.CommunicationEndpointNotFoundException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.CommunicationEndpointNotFoundException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.CommunicationEndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.CorrelativeDataBase">
            <summary>
            Base class that contains correlative communication data sent between services.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData">
            <summary>
            Interface to mark data model types that are used as message body data.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICorrelativeDataBase.CorrelationIdentifier">
            <summary>
            Gets the unique correlation identifier for a message context.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.DataTransferObjects.CorrelativeDataBase.GetNextId">
            <summary>
            Generates a new unique correlation id.
            </summary>
            <returns>A new unique correlation id.</returns>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.CorrelativeDataBase.CorrelationIdentifier">
            <summary>
            Gets or sets the unique correlation identifier for a message context.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.DiscoFeature">
            <summary>
            Contains a protocol namespace or other feature offered by the communication endpoint.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.DataTransferObjects.DiscoFeature.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoFeature"/> class with
            the specified feature value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoFeature.Value">
            <summary>
            Gets a string containing a protocol namespace or
            other feature offered by the communication endpoint.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.DiscoIdentity">
            <summary>
            Containing information about the communication endpoint's identity.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.DataTransferObjects.DiscoIdentity.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoIdentity"/> class with
            the specified type, category and name.
            </summary>
            <param name="type">Type of the communication endpoint.</param>
            <param name="category">Category of the communication endpoint.</param>
            <param name="name">Name of the communication endpoint.</param>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoIdentity.Type">
            <summary>
            Gets the type of the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoIdentity.Category">
            <summary>
            Gets the category of the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoIdentity.Name">
            <summary>
            Gets the name of the communication endpoint.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.DiscoInfo">
            <summary>
            Contains service discovery information such as
            discovered identities and features of a communication endpoint.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.DataTransferObjects.DiscoInfo.#ctor(System.Collections.Generic.IEnumerable{Footloose.DataModel.DataTransferObjects.DiscoIdentity},System.Collections.Generic.IEnumerable{Footloose.DataModel.DataTransferObjects.DiscoFeature})">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfo"/> class with
            the specified identities and features.
            </summary>
            <param name="identities">A list of service discovery identities of the communication endpoint.</param>
            <param name="featues">A list of service discovery features the communication endpoint supports.</param>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoInfo.Identities">
            <summary>
            Gets a list of service discovery identities of the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoInfo.Featues">
            <summary>
            Gets a list of service discovery features the communication endpoint supports.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.DiscoInfoRequest">
            <summary>
            A service discovery request that is send by the requesting communication endpoint
            to discover information about another communication endpoint on the network.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoInfoRequest.Capabilities">
            <summary>
            Gets or sets the capabilities version string.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.DiscoInfoResponse">
            <summary>
            A service discovery respose to an <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfoRequest"/>.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoInfoResponse.Capabilities">
            <summary>
            Gets or sets the capabilities version string.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.DiscoInfoResponse.DiscoInfo">
            <summary>
            Gets or sets the service discovery information.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.MethodCall">
            <summary>
            Defines the serializable method call data class sent between services.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.DataTransferObjects.MethodCall.CreateRequest">
            <summary>
            Creates a new <see cref="T:Footloose.DataModel.DataTransferObjects.MethodCallRequest"/>
            for this <see cref="T:Footloose.DataModel.DataTransferObjects.MethodCall"/>.
            </summary>
            <returns>A instance of <see cref="T:Footloose.DataModel.DataTransferObjects.MethodCallRequest"/>
            for this <see cref="T:Footloose.DataModel.DataTransferObjects.MethodCall"/>.</returns>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodCall.Type">
            <summary>
            Gets or sets the <see cref="T:System.Type" /> containing the name
            of the <see cref="T:System.Type" /> the method belongs to.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodCall.MethodName">
            <summary>
            Gets or sets the <see cref="T:System.String" /> containing the method name.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodCall.GenericArguments">
            <summary>
            Gets or sets the array of <see cref="T:System.Type" /> objects representing
            the number, order, and type of the generic arguments for the method.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodCall.MethodSignature">
            <summary>
            Gets or sets the array of <see cref="T:System.Type" /> objects representing
            the number, order, and type of the parameters for the method.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodCall.Arguments">
            <summary>
            Gets or sets the array containing the arguments to pass to the method to invoke.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.MethodCallRequest">
            <summary>
            Defines a methode call request on a service.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IMethodCallRequest.Type">
            <summary>
            Gets the <see cref="T:System.Type" /> containing the name
            of the <see cref="T:System.Type" /> the method belongs to.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IMethodCallRequest.MethodName">
            <summary>
            Gets the <see cref="T:System.String" /> containing the method name.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodCallRequest.Type">
            <summary>
            Gets or sets the <see cref="T:System.Type" /> containing the name
            of the <see cref="T:System.Type" /> the method belongs to.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodCallRequest.MethodName">
            <summary>
            Gets or sets the <see cref="T:System.String" /> containing the method name.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.MethodResponse">
            <summary>
            Defines the method response data class sent between services.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.DataTransferObjects.MethodResponse.CreateRequest">
            <summary>
            Creates a new <see cref="T:Footloose.DataModel.DataTransferObjects.MethodResponseRequest"/>
            for this <see cref="T:Footloose.DataModel.DataTransferObjects.MethodResponse"/>.
            </summary>
            <returns>A instance of <see cref="T:Footloose.DataModel.DataTransferObjects.MethodResponseRequest"/>
            for this <see cref="T:Footloose.DataModel.DataTransferObjects.MethodResponse"/>.</returns>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodResponse.ReturnValue">
            <summary>
            Gets or sets the return value of the method call.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.MethodResponse.Exception">
            <summary>
            Gets or sets the <see cref="T:System.Exception" /> thrown during the method call.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.MethodResponseRequest">
            <summary>
            Defines a methode call request on a service.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.Presence">
            <summary>
            A presence information contains network availability information from a <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            It'll be send to all subscribed endpoints upon changes, like connect, disconnect or priority/availability changes.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.IPresence">
            <summary>
            A presence information contains network availability information from a <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            It'll be send to all subscribed endpoints upon changes, like connect, disconnect or priority/availability changes.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IPresence.From">
            <summary>
            Gets or sets the uri if the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IPresence.IsOnline">
            <summary>
            Gets a value indication if the communication endpoint is online.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IPresence.Priority">
            <summary>
            Gets or sets the priority of the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IPresence.Status">
            <summary>
            Gets or sets the status type of the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IPresence.StatusInformation">
            <summary>
            Gets a string containing detailed description of a status type.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IPresence.Capabilities">
            <summary>
            Gets a string that contains a hash presentation of the communication endpoint's capabilities.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.Presence.From">
            <summary>
            Gets or sets the uri if the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.Presence.IsOnline">
            <summary>
            Gets a value indication if the communication endpoint is online.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.Presence.Priority">
            <summary>
            Gets or sets the priority of the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.Presence.Status">
            <summary>
            Gets or sets the status type of the communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.Presence.StatusInformation">
            <summary>
            Gets a string containing detailed description of a status type.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.Presence.Capabilities">
            <summary>
            Gets a string that contains a hash presentation of the communication endpoint's capabilities.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest">
            <summary>
            A presence subscription request that is send by the requesting communication endpoint
            to another <see cref="T:Footloose.DataModel.IEndpointIdentity"/> to receive <see cref="T:Footloose.DataModel.IPresence"/> notifications
            when approved.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest.Reason">
            <summary>
            Gets or sets a reason that explains the subscription request to the recipient.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse">
            <summary>
            A presence subscription response to a <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/>.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse.Approved">
            <summary>
            Gets or sets a value indicating if the <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/> was approved.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DataTransferObjects.PresenceUnsubscribe">
            <summary>
            A presence unsubscribe request that is send by the subscribed endpoint
            to another <see cref="T:Footloose.DataModel.IEndpointIdentity"/> to unsubscribe from it's presence notifications.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.IMethodResponse">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Footloose.DataModel.IMethodResponse.From">
            <summary>
            Gets the Uri of the service the method call response was send from.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IMethodResponse.CorrelationIdentifier">
            <summary>
            Gets the unique correlation identifier for a message context.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IMethodResponse.ReturnValue">
            <summary>
            Gets the return value of the method call.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IMethodResponse.Exception">
            <summary>
            Gets the <see cref="T:System.Exception" /> thrown during the method call.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.IMethodResponse`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IMethodResponse`1.ReturnValue">
            <summary>
            Gets the return value of the method call.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.MethodResponse.#ctor(System.Guid,System.Uri,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.MethodResponse" /> class
            with the specified correlation identifier, from Uri and return value.
            </summary>
            <param name="correlationIdentifier">The unique correlation identifier for this method call.</param>
            <param name="from">The Uri of the service the method call response was send from.</param>
            <param name="returnValue">The return value of the method call.</param>
        </member>
        <member name="M:Footloose.DataModel.MethodResponse.#ctor(System.Guid,System.Uri,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.MethodResponse" /> class
            with the specified correlation identifier, from Uri and exception.
            </summary>
            <param name="correlationIdentifier">The unique correlation identifier for this method call.</param>
            <param name="from">The Uri of the service the method call response was send from.</param>
            <param name="exception">The exception thrown during the method call.</param>
        </member>
        <member name="M:Footloose.DataModel.MethodResponse.#ctor(Footloose.DataModel.IMethodResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.MethodResponse" /> class
            with the specified <see cref="T:Footloose.DataModel.IMethodResponse"/>.
            </summary>
            <param name="methodResponse">The <see cref="T:Footloose.DataModel.IMethodResponse"/>.</param>
        </member>
        <member name="P:Footloose.DataModel.MethodResponse.CorrelationIdentifier">
            <summary>
            Gets the unique correlation identifier for a message context.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.MethodResponse.From">
            <summary>
            Gets the Uri of the service the method call response was send from.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.MethodResponse.ReturnValue">
            <summary>
            Gets the return value of the method call.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.MethodResponse.Exception">
            <summary>
            Gets the <see cref="T:System.Exception" /> thrown during the method call.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.MethodResponse`1.#ctor(System.Guid,System.Uri,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.MethodResponse`1" /> class
            with the specified correlation identifier, from Uri and return value.
            </summary>
            <param name="correlationIdentifier">The unique correlation identifier for this method call.</param>
            <param name="from">The Uri of the service the method call response was send from.</param>
            <param name="returnValue">The return value of the method call.</param>
        </member>
        <member name="M:Footloose.DataModel.MethodResponse`1.#ctor(System.Guid,System.Uri,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.MethodResponse`1" /> class
            with the specified correlation identifier, from Uri and exception.
            </summary>
            <param name="correlationIdentifier">The unique correlation identifier for this method call.</param>
            <param name="from">The Uri of the service the method call response was send from.</param>
            <param name="exception">The exception thrown during the method call.</param>
        </member>
        <member name="M:Footloose.DataModel.MethodResponse`1.#ctor(Footloose.DataModel.IMethodResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.MethodResponse`1" /> class
            with the specified <see cref="T:Footloose.DataModel.IMethodResponse"/>.
            </summary>
            <param name="methodResponse">The <see cref="T:Footloose.DataModel.IMethodResponse"/>.</param>
        </member>
        <member name="P:Footloose.DataModel.MethodResponse`1.ReturnValue">
            <summary>
            Gets the return value of the method call.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.PresenceSubscriptionType">
            <summary>
            Represents the state of the subscription to the <see cref="T:Footloose.DataModel.IPresence"/>
            of a <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.PresenceSubscriptionType.None">
            <summary>
            Neither this instance nor the other <see cref="T:Footloose.DataModel.IEndpointIdentity"/> have a
            subscription to the <see cref="T:Footloose.DataModel.IPresence"/> notification from each other.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.PresenceSubscriptionType.From">
            <summary>
            The other <see cref="T:Footloose.DataModel.IEndpointIdentity"/> has a subscription to the <see cref="T:Footloose.DataModel.IPresence"/>
            of this instance, but this instance doesn't have a subscription to the other's <see cref="T:Footloose.DataModel.IPresence"/>.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.PresenceSubscriptionType.To">
            <summary>
            This instance has a subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the
            other <see cref="T:Footloose.DataModel.IEndpointIdentity"/>, but the other <see cref="T:Footloose.DataModel.IEndpointIdentity"/>
            doesn't have a subscription to this instance.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.PresenceSubscriptionType.Both">
            <summary>
            This instance and the other <see cref="T:Footloose.DataModel.IEndpointIdentity"/> have subscriptions to each other's <see cref="T:Footloose.DataModel.IPresence"/>.
            </summary>
        </member>
        <member name="T:Footloose.IEndpointIdentityManagerInternal">
            <summary>
            Internal version of the <see cref="T:Footloose.IEndpointIdentityManager"/>.
            </summary>
        </member>
        <member name="M:Footloose.IEndpointIdentityManager.Find">
            <summary>
            Find <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> objects with a simplified search API
            by using <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/> and Linq.
            </summary>
            <returns>A instance of a <see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="M:Footloose.IEndpointIdentityManager.FindByExposingServiceContractOfType``1">
            <summary>
            Find <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> objects with a simplified search API
            by using <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/> and Linq
            that expose the specifed service contract.
            </summary>
            <typeparam name="TServiceContract">The service contract.</typeparam>
            <returns>A instance of a <see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="E:Footloose.IEndpointIdentityManager.PresenceNotificationReceived">
            <summary>
            Event that occurs when a <see cref="T:Footloose.DataModel.IPresence"/> notification received.
            </summary>
        </member>
        <member name="E:Footloose.IEndpointIdentityManager.PresenceSubscriptionRequestReceived">
            <summary>
            Event that occurs when a new <see cref="T:Footloose.DataModel.IPresence"/> subscription requests received.
            </summary>
        </member>
        <member name="E:Footloose.IEndpointIdentityManager.PresenceSubscriptionResponseReceived">
            <summary>
            Event that occurs when a new <see cref="T:Footloose.DataModel.IPresence"/> subscription response received.
            </summary>
        </member>
        <member name="P:Footloose.IEndpointIdentityManager.EndpointIdentities">
            <summary>
            Gets a list of <see cref="T:Footloose.DataModel.IEndpointIdentity"/> objects.
            </summary>
        </member>
        <member name="P:Footloose.IEndpointIdentityManager.Capabilities">
            <summary>
            Gets a list of discovered service capabilities.
            </summary>
        </member>
        <member name="P:Footloose.IEndpointIdentityManager.SelfEndpointIdentity">
            <summary>
            Returns an instance of <see cref="T:Footloose.DataModel.ISelfEndpointIdentity"/> for
            interaction with the endpoint of this service node.
            </summary>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.SendSelfPresence(Footloose.DataModel.DataTransferObjects.Presence)">
            <summary>
            Send the <see cref="T:Footloose.DataModel.DataTransferObjects.Presence"/> of this instance to all subscribed endpoints.
            </summary>
            <param name="presence">The <see cref="T:Footloose.DataModel.DataTransferObjects.Presence"/> of this instance.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.NotifyPresenceNotificationReceived(Footloose.DataModel.IPresence)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.IPresence"/>
            from another endpoint received.
            </summary>
            <param name="presence">The <see cref="T:Footloose.DataModel.IPresence"/> notification from another endpoint.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.NotifyPresenceSubscriptionRequestReceived(System.Uri,Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest,System.Boolean@)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/>
            from another endpoint received.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="presenceSubscriptionRequest">The <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/>.</param>
            <param name="approved">A value indicating if the subscription request was approved.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.NotifyPresenceSubscriptionResponseReceived(System.Uri,Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse"/>
            from another endpoint received.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="presenceSubscriptionResponse">The <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse"/>.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.NotifyPresenceUnsubscribeReceived(System.Uri)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceUnsubscribe"/> message
            from another endpoint received.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.NotifyServiceDiscoveryInfoReceived(System.String,Footloose.DataModel.DataTransferObjects.DiscoInfo)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfo"/>
            from another endpoint received.
            </summary>
            <param name="caps">The capabilities version the disco info belongs to.</param>
            <param name="discoInfo">The requested disco information.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.AddEndpointIdentity(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and list of groups to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.UpdateEndpointIdentity(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the name and list of groups of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.RemoveEndpointIdentity(System.Uri)">
            <summary>
            Removes the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> from the collection
            and unsubcribe from the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.SendSubscribtionRequest(System.Uri,System.String)">
            <summary>
            Sends a subscription request with the specified reason
            to permanently subscribe to a identity's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="reason">A reason that explains the subscription request.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.UnsubscribeFrom(System.Uri)">
            <summary>
            Unsubscribe from the identity's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.IEndpointIdentityManagerInternal.RevokeSubscriptionFrom(System.Uri)">
            <summary>
            Cancel and revoke the identity's subscription to this instance's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="P:Footloose.IEndpointIdentityManagerInternal.EndpointIdentities">
            <summary>
            Gets a <see cref="T:Footloose.DataModel.EndpointIdentityDictionary"/> of <see cref="T:Footloose.DataModel.EndpointIdentity"/> objects
            for internal interaction.
            </summary>
        </member>
        <member name="P:Footloose.IEndpointIdentityManagerInternal.SelfEndpointIdentity">
            <summary>
            Returns an instance of <see cref="P:Footloose.IEndpointIdentityManagerInternal.SelfEndpointIdentity"/> for
            internal interaction with the endpoint of this service node.
            </summary>
        </member>
        <member name="T:Footloose.Messaging.MessageBuilderNotFoundException">
            <summary>
            Represents errors that occur when no proper <see cref="T:Footloose.Messaging.IMessageBuilder"/>
            is found while enqueue new data with the <see cref="T:Footloose.TransportChannels.IMessageOriginator"/>.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.MessageBuilderNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.MessageBuilderNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.MessageBuilderNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.MessageBuilderNotFoundException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Footloose.Messaging.MessageBuilderNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.MessageBuilderNotFoundException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Footloose.Messaging.MessageBuilderNotFoundException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.MessageBuilderNotFoundException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.Messaging.MessageBuilderNotFoundException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.MessageBuilderNotFoundException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.Messaging.MessageBuilderNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="T:Footloose.Messaging.MessageBundle">
            <summary>
            A bundle of <see cref="T:Footloose.Messaging.Message"/> objects created by an <see cref="T:Footloose.Messaging.IMessageBuilder"/>.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.MessageBundle.RequestMessage">
            <summary>
            Gets or sets the request message for this bundle of <see cref="T:Footloose.Messaging.Message"/> objects.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.MessageBundle.DataMessages">
            <summary>
            Gets or sets the collection of data <see cref="T:Footloose.Messaging.Message"/> objects,
            that are associated with the request message of this bundle.
            </summary>
        </member>
        <member name="T:Footloose.Messaging.PresenceMessageBuilder">
            <summary>
            Builds up messages from <see cref="T:Footloose.DataModel.DataTransferObjects.Presence"/> objects.
            </summary>
        </member>
        <member name="T:Footloose.Messaging.IMessageBuilder">
            <summary>
            This interface defines a factory to build up messages from specific <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> objects.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.IMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="M:Footloose.Messaging.PresenceMessageBuilder.#ctor(Footloose.Serialization.ISerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.PresenceMessageBuilder"/> class with
            specified <see cref="T:Footloose.Serialization.ISerializer"/>.
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:Footloose.Messaging.PresenceMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.Messaging.MessageExtensions">
            <summary>
            Provide extensions for the <see cref="T:Footloose.Messaging.Message"/> type.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.MessageExtensions.GetPriority(Footloose.Messaging.Message)">
            <summary>
            Gets the priority for a outgoing message.
            This value is used for the outgoing message queue to sort messages based on their priority.
            </summary>
            <param name="message">The input message.</param>
            <returns>The outgoing message queue priority.</returns>
        </member>
        <member name="M:Footloose.Messaging.MessageExtensions.CreateResponse(Footloose.Messaging.Message)">
            <summary>
            Creates a response of type <see cref="F:Footloose.Messaging.MessageType.Result"/> for the provided message.
            </summary>
            <param name="message">The original <see cref="T:Footloose.Messaging.Message"/>.</param>
            <returns>The response <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Result"/>.</returns>
        </member>
        <member name="M:Footloose.Messaging.MessageExtensions.CreateResponse(Footloose.Messaging.Message,System.Exception)">
            <summary>
            Creates a response of type <see cref="F:Footloose.Messaging.MessageType.Error"/> for the provided message and <see cref="T:System.Exception"/>.
            </summary>
            <param name="message">The original <see cref="T:Footloose.Messaging.Message"/>.</param>
            <param name="exception">The <see cref="T:System.Exception"/>.</param>
            <returns>The response <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Error"/>.</returns>
        </member>
        <member name="P:Footloose.Messaging.MessageExtensions.SerializerFactory">
            <summary>
            Gets or sets the delegate factory for ISerializer types.
            </summary>
        </member>
        <member name="T:Footloose.Messaging.PresenceUnsubscribeMessageHandler">
            <summary>
            Process incoming <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceUnsubscribe"/> messages.
            </summary>
        </member>
        <member name="T:Footloose.Messaging.IMessageHandler">
            <summary>
            A interface that is responsible to process incoming messages that are handled by the <see cref="T:Footloose.TransportChannels.IMessageDispatcher"/>.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.IMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="M:Footloose.Messaging.PresenceUnsubscribeMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="T:Footloose.Messaging.PresenceUnsubscribeMessageBuilder">
            <summary>
            Builds up messages from <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceUnsubscribe"/> objects.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.PresenceUnsubscribeMessageBuilder.#ctor(Footloose.Serialization.ISerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.DiscoInfoResponseMessageBuilder"/> class with
            specified <see cref="T:Footloose.Serialization.ISerializer"/>.
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:Footloose.Messaging.PresenceUnsubscribeMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.PresenceSubscriptionResponseEventArgs">
            <summary>
            Provides data for the <see cref="E:Footloose.IEndpointIdentityManager.PresenceSubscriptionResponseReceived"/>
            event. When a new presence subscription response received an instance of this class is passed to the handler.
            </summary>
        </member>
        <member name="M:Footloose.PresenceSubscriptionResponseEventArgs.#ctor(Footloose.DataModel.IEndpointIdentity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.PresenceSubscriptionResponseEventArgs"/> class
            with the specified <see cref="T:Footloose.DataModel.IEndpointIdentity"/> and message.
            </summary>
            <param name="from">The <see cref="T:Footloose.DataModel.IEndpointIdentity"/> from the sender of this subscription request.</param>
            <param name="approved">The message that explains the subscription request.</param>
        </member>
        <member name="P:Footloose.PresenceSubscriptionResponseEventArgs.From">
            <summary>
            Gets the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> from the sender of this subscription request.
            </summary>
        </member>
        <member name="P:Footloose.PresenceSubscriptionResponseEventArgs.Approved">
            <summary>
            Gets a value indicating if the subscription request was approved.
            </summary>
        </member>
        <member name="T:Footloose.Messaging.PresenceSubscriptionResponseMessageHandler">
            <summary>
            Process incoming <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse"/> messages.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.PresenceSubscriptionResponseMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="T:Footloose.PresenceSubscriptionRequestEventArgs">
            <summary>
            Provides data for the <see cref="E:Footloose.IEndpointIdentityManager.PresenceSubscriptionRequestReceived"/>
            event. When a new presence subscription request received an instance of this class is passed to the handler.
            </summary>
        </member>
        <member name="M:Footloose.PresenceSubscriptionRequestEventArgs.#ctor(Footloose.DataModel.IEndpointIdentity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.PresenceSubscriptionRequestEventArgs"/> class
            with the specified <see cref="T:Footloose.DataModel.IEndpointIdentity"/> and reason.
            </summary>
            <param name="from">The <see cref="T:Footloose.DataModel.IEndpointIdentity"/> from the sender of this subscription request.</param>
            <param name="reason">The reason that explains the subscription request.</param>
        </member>
        <member name="P:Footloose.PresenceSubscriptionRequestEventArgs.From">
            <summary>
            Gets the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> from the sender of this subscription request.
            </summary>
        </member>
        <member name="P:Footloose.PresenceSubscriptionRequestEventArgs.Reason">
            <summary>
            Gets a reason that explains the subscription request.
            </summary>
        </member>
        <member name="P:Footloose.PresenceSubscriptionRequestEventArgs.Approve">
            <summary>
            Gets or sets a value indicating if the subscription should be approved.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.CommunicationEndpoint">
            <summary>
            Internal communication endpoint implementation.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.ICommunicationEndpoint">
            <summary>
            Interface for a communication end point.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICommunicationEndpoint.Uri">
            <summary>
            Gets the uri of this communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICommunicationEndpoint.IsOnline">
            <summary>
            Gets a value indication if the communication endpoint is online.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICommunicationEndpoint.Priority">
            <summary>
            Gets the priority of this communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICommunicationEndpoint.Status">
            <summary>
            Gets the availability status of this communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICommunicationEndpoint.StatusInformation">
            <summary>
            Gets a string containing detailed description of a status type.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICommunicationEndpoint.Capabilities">
            <summary>
            Gets a string that contains a hash presentation of the communication endpoint's capabilities.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.ICommunicationEndpoint.Identity">
            <summary>
            Gets the identity of this communication endpoint.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.CommunicationEndpoint.#ctor(Footloose.DataModel.IEndpointIdentity,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.CommunicationEndpoint"/> class with
            specified <see cref="T:Footloose.DataModel.IEndpointIdentity"/> and service <see cref="T:System.Uri"/>.
            </summary>
            <param name="identity">The <see cref="T:Footloose.DataModel.IEndpointIdentity"/> of this endpoint.</param>
            <param name="uri">The service <see cref="T:System.Uri"/> of this endpoint.</param>
        </member>
        <member name="P:Footloose.DataModel.CommunicationEndpoint.Uri">
            <summary>
            Gets the uri of this communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.CommunicationEndpoint.IsOnline">
            <summary>
            Gets a value indication if the communication endpoint is online.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.CommunicationEndpoint.Priority">
            <summary>
            Gets the priority of this communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.CommunicationEndpoint.Status">
            <summary>
            Gets the availability status of this communication endpoint.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.CommunicationEndpoint.StatusInformation">
            <summary>
            Gets a string containing detailed description of a status type.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.CommunicationEndpoint.Capabilities">
            <summary>
            Gets a string that contains a hash presentation of the communication endpoint's capabilities.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.CommunicationEndpoint.Identity">
            <summary>
            Gets the identity of this communication endpoint.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.CommunicationEndpointStatusType">
            <summary>
            Represents the availability status of a communication endpoint send via <see cref="T:Footloose.DataModel.IPresence"/> notifications.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.CommunicationEndpointStatusType.Offline">
            <summary>
            The communication endpoint is offline and unavailable.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.CommunicationEndpointStatusType.Online">
            <summary>
            The communication endpoint is online and available.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.CommunicationEndpointStatusType.Busy">
            <summary>
            The communication endpoint is busy.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.CommunicationEndpointStatusType.TemporarilyUnavailable">
            <summary>
            The communication endpoint is temporarily unavailable.
            </summary>
        </member>
        <member name="F:Footloose.DataModel.CommunicationEndpointStatusType.Unavailable">
            <summary>
            The communication endpoint is unavailable for an extended period.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.DiscoFeatureComparer">
            <summary>
            Provide a simple comparer for DiscoFeature objects.
            </summary>
        </member>
        <!-- Ungültiger XML-Kommentar wurde für den Member "M:Footloose.DataModel.DiscoFeatureComparer.GetHashCode(Footloose.DataModel.DataTransferObjects.DiscoFeature)" ignoriert -->
        <member name="T:Footloose.DataModel.EndpointFindCriteria">
            <summary>
            EndpointFindCriteria is the implementation of a simplified API for retrieving <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> objects
            by using <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/> and Linq.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.IEndpointFindCriteria">
            <summary>
            IEndpointFindCriteria is a simplified API for retrieving <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> objects
            by using <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/> and Linq.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.IEndpointFindCriteria.WithFeature(Footloose.DataModel.IEndpointFeatureFindCriterion)">
            <summary>
            Add a new feature criterion.
            </summary>
            <remarks>
            <para>
            Build in criterion are provided by the static <see cref="T:Footloose.FeatureFindCriterion"/> factory class.
            </para>
            </remarks>
            <param name="criterion">The criterion.</param>
            <returns><see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="M:Footloose.DataModel.IEndpointFindCriteria.WithUri(System.Uri)">
            <summary>
            Add a new <see cref="T:System.Uri"/> criterion.
            </summary>
            <param name="uriCriterion">The criterion.</param>
            <returns><see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="M:Footloose.DataModel.EndpointFindCriteria.#ctor(Footloose.DataModel.IEndpointIdentityCollection,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Footloose.DataModel.DataTransferObjects.DiscoInfo}})">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.EndpointFindCriteria"/> criteria
            with the provided endpoints identities and capabilities.
            </summary>
            <param name="endpointsIdentities">List of known <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.</param>
            <param name="capabilities">Capabilities dictionary.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointFindCriteria.WithFeature(Footloose.DataModel.IEndpointFeatureFindCriterion)">
            <summary>
            Add a new feature criterion.
            </summary>
            <remarks>
            <para>
            Build in criterion are provided by the static <see cref="T:Footloose.FeatureFindCriterion"/> factory class.
            </para>
            </remarks>
            <param name="criterion">The criterion.</param>
            <returns><see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="M:Footloose.DataModel.EndpointFindCriteria.WithUri(System.Uri)">
            <summary>
            Add a new <see cref="T:System.Uri"/> criterion.
            </summary>
            <param name="uriCriterion">The criterion.</param>
            <returns><see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="M:Footloose.DataModel.EndpointFindCriteria.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.DataModel.EndpointFindCriteria.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Footloose.DataModel.EndpointFindCriteria.GetCapabilitiesByCriteria">
            <summary>
            Gets a list of capability hashes that contains at least all required features.
            </summary>
            <returns>List of capability hashes.</returns>
        </member>
        <member name="T:Footloose.DataModel.EndpointIdentity">
            <summary>
            Represents a endpoint identity.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.IEndpointIdentity">
            <summary>
            Interface for a identity of a <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentity.Subscribe">
            <summary>
            Sends a subscription request to permanently subscribe to a identity's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentity.Subscribe(System.String)">
            <summary>
            Sends a subscription request with the specified reason
            to permanently subscribe to a identity's presence information.
            </summary>
            <param name="reason">A reason that explains the subscription request.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentity.Unsubscribe">
            <summary>
            Unsubscribe from the identity's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentity.RevokeSubscription">
            <summary>
            Cancel and revoke the identity's subscription to this instance's presence information.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IEndpointIdentity.Uri">
            <summary>
            Gets the uri of this endpoint identity.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IEndpointIdentity.Name">
            <summary>
            Gets the name of this endpoint identity.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IEndpointIdentity.Groups">
            <summary>
            Gets a list of groups the endpoint identity belongs to.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IEndpointIdentity.PresenceSubscriptionType">
            <summary>
            Gets the state of the subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of this endpoint identity.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IEndpointIdentity.Endpoints">
            <summary>
            Gets a list of communication endpoints this identity propagates.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentity.#ctor(System.Lazy{Footloose.IEndpointIdentityManagerInternal},System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.EndpointIdentity"/> class with
            the specified <see cref="T:Footloose.IEndpointIdentityManagerInternal"/> instance.
            </summary>
            <param name="endpointIdentityManager">The <see cref="T:Footloose.IEndpointIdentityManagerInternal"/>.</param>
            <param name="uri">The uri of this <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentity.Subscribe">
            <summary>
            Sends a subscription request to permanently subscribe to a identity's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentity.Subscribe(System.String)">
            <summary>
            Sends a subscription request with the specified reason
            to permanently subscribe to a identity's presence information.
            </summary>
            <param name="reason">A reason that explains the subscription request.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentity.Unsubscribe">
            <summary>
            Unsubscribe from the identity's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentity.RevokeSubscription">
            <summary>
            Cancel and revoke the identity's subscription to this instance's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentity.SetPresence(Footloose.DataModel.IPresence)">
            <summary>
            Set the presence for this <see cref="T:Footloose.DataModel.IEndpointIdentity"/> received from the <see cref="T:Footloose.TransportChannels.ITransportChannel"/>.
            </summary>
            <param name="presence">The <see cref="T:Footloose.DataModel.IPresence"/> object.</param>
        </member>
        <member name="P:Footloose.DataModel.EndpointIdentity.Uri">
            <summary>
            Gets the uri of this endpoint identity.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.EndpointIdentity.Name">
            <summary>
            Gets or sets the name of this endpoint identity.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.EndpointIdentity.Groups">
            <summary>
            Gets or sets a list of groups the endpoint identity belongs to.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.EndpointIdentity.PresenceSubscriptionType">
            <summary>
            Gets or sets the state of the subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of this endpoint identity.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.EndpointIdentity.Footloose#DataModel#IEndpointIdentity#Endpoints">
            <summary>
            Gets a list of communication endpoints this identity propagates.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.EndpointIdentity.Endpoints">
            <summary>
            Gets a list of communication endpoints this identity propagates.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.EndpointIdentityDictionary">
            <summary>
            A internal dictionary of known <see cref="T:Footloose.DataModel.IEndpointIdentity"/> objects. This implementation
            is exposed to the public through the <see cref="T:Footloose.DataModel.IEndpointIdentityCollection"/> interface.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.IEndpointIdentityCollection">
            <summary>
            Public interface for a collection of <see cref="T:Footloose.DataModel.IEndpointIdentity"/> objects.
            Use this interface to enumerate through the list of known <see cref="T:Footloose.DataModel.IEndpointIdentity"/> objects and
            their <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri,System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri,System.String)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri,System.String,System.String)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and group to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="group">The group the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and group to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="group">The group the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and list of groups to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Add(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and list of groups to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Update(System.Uri,System.String)">
            <summary>
            Updates the name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Update(System.Uri,System.String,System.String)">
            <summary>
            Updates the name and group of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="group">The group the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Update(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the name and list of groups of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.IEndpointIdentityCollection.Remove(System.Uri)">
            <summary>
            Removes the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> from the collection
            and unsubcribe from the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.#ctor(System.Lazy{Footloose.IEndpointIdentityManagerInternal})">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.EndpointIdentityDictionary"/> class that is empty.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.System#Collections#Generic#IEnumerable{Footloose#DataModel#IEndpointIdentity}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri,System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri,System.String)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri,System.String,System.String)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and group to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="group">The group the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and group to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="group">The group the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and list of groups to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Add(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and list of groups to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Update(System.Uri,System.String)">
            <summary>
            Updates the name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Update(System.Uri,System.String,System.String)">
            <summary>
            Updates the name and group of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="group">The group the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Update(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the name and list of groups of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.DataModel.EndpointIdentityDictionary.Remove(System.Uri)">
            <summary>
            Removes the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> from the collection
            and unsubcribe from the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="T:Footloose.DataModel.IEndpointFeatureFindCriterion">
            <summary>
            Criterion for a service discovery feature that could be used as constraint
            in a <see cref="T:Footloose.DataModel.IEndpointFindCriteria"/> query.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.IEndpointFeatureFindCriterion.Feature">
            <summary>
            Gets the service discovery feature represented by this <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.ISelfEndpointIdentity">
            <summary>
            Interface to interact with the self identity of this service node.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.ISelfEndpointIdentity.UpdatePresence">
            <summary>
            Updates the self presence information with the given priority.
            </summary>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.ISelfEndpointIdentity.UpdatePresence(System.Int32)">
            <summary>
            Updates the self presence information with the given priority.
            </summary>
            <param name="priority">Priority of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.ISelfEndpointIdentity.UpdatePresence(System.Int32,Footloose.DataModel.CommunicationEndpointStatusType)">
            <summary>
            Updates the self presence information with the given priority
            and status.
            </summary>
            <param name="priority">Priority of this service node.</param>
            <param name="status">Status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.ISelfEndpointIdentity.UpdatePresence(System.Int32,Footloose.DataModel.CommunicationEndpointStatusType,System.String)">
            <summary>
            Updates the self presence information with the given priority,
            status and status information.
            </summary>
            <param name="priority">Priority of this service node.</param>
            <param name="status">Status of this service node.</param>
            <param name="statusInformation">Status text with additional information about the status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.ISelfEndpointIdentity.UpdatePresence(Footloose.DataModel.CommunicationEndpointStatusType)">
            <summary>
            Updates the self presence information with the given status.
            </summary>
            <param name="status">Status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.ISelfEndpointIdentity.UpdatePresence(Footloose.DataModel.CommunicationEndpointStatusType,System.String)">
            <summary>
            Updates the self presence information with the given status
            and status information.
            </summary>
            <param name="status">Status of this service node.</param>
            <param name="statusInformation">Status text with additional information about the status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="T:Footloose.DataModel.ProtocolVersionFeatureFindCriterion">
            <summary>
            A protocol version criterion.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.ProtocolVersionFeatureFindCriterion.#ctor(System.Version)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.ProtocolVersionFeatureFindCriterion"/> criterion
            with the provided protocol version.
            </summary>
            <param name="protocolVersion">The protocol version.</param>
        </member>
        <member name="P:Footloose.DataModel.ProtocolVersionFeatureFindCriterion.Feature">
            <summary>
            Gets the service discovery feature represented by this <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.SelfEndpointIdentity">
            <summary>
            Represents the self endpoint identity.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.#ctor(System.Lazy{Footloose.IEndpointIdentityManagerInternal})">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.SelfEndpointIdentity"/> class with
            the specified <see cref="T:Footloose.EndpointIdentityManagerBase"/> instance.
            </summary>
            <param name="endpointIdentityManager">The <see cref="T:Footloose.EndpointIdentityManagerBase"/>.</param>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.Subscribe">
            <summary>
            Sends a subscription request to permanently subscribe to a identity's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.Subscribe(System.String)">
            <summary>
            Sends a subscription request with the specified reason
            to permanently subscribe to a identity's presence information.
            </summary>
            <param name="reason">A reason that explains the subscription request.</param>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.Unsubscribe">
            <summary>
            Unsubscribe from the identity's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.RevokeSubscription">
            <summary>
            Cancel and revoke the identity's subscription to this instance's presence information.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.UpdatePresence">
            <summary>
            Updates the self presence information with the given priority.
            </summary>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.UpdatePresence(System.Int32)">
            <summary>
            Updates the self presence information with the given priority.
            </summary>
            <param name="priority">Priority of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.UpdatePresence(System.Int32,Footloose.DataModel.CommunicationEndpointStatusType)">
            <summary>
            Updates the self presence information with the given priority
            and status.
            </summary>
            <param name="priority">Priority of this service node.</param>
            <param name="status">Status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.UpdatePresence(System.Int32,Footloose.DataModel.CommunicationEndpointStatusType,System.String)">
            <summary>
            Updates the self presence information with the given priority,
            status and status information.
            </summary>
            <param name="priority">Priority of this service node.</param>
            <param name="status">Status of this service node.</param>
            <param name="statusInformation">Status text with additional information about the status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.UpdatePresence(Footloose.DataModel.CommunicationEndpointStatusType)">
            <summary>
            Updates the self presence information with the given status.
            </summary>
            <param name="status">Status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.DataModel.SelfEndpointIdentity.UpdatePresence(Footloose.DataModel.CommunicationEndpointStatusType,System.String)">
            <summary>
            Updates the self presence information with the given status
            and status information.
            </summary>
            <param name="status">Status of this service node.</param>
            <param name="statusInformation">Status text with additional information about the status of this service node.</param>
            <remarks>
            <para>
            This method sends a new presence notification message to all
            communication endpoints that are subscribed to the presence of
            this service node.
            
            Use this thoughtful, otherwise you could flood your network
            with senseless presence notifications.
            </para>
            </remarks>
        </member>
        <member name="P:Footloose.DataModel.SelfEndpointIdentity.DiscoInfo">
            <summary>
            Gets or sets the service discovery information.
            </summary>
        </member>
        <member name="P:Footloose.DataModel.SelfEndpointIdentity.Uri">
            <summary>
            Gets or sets the uri of this endpoint identity.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.SerializerFeatureFindCriterion">
            <summary>
            A serializer type criterion.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.SerializerFeatureFindCriterion.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.SerializerFeatureFindCriterion"/> criterion
            with the provided serializer type.
            </summary>
            <param name="serializer">Type of the serializer.</param>
        </member>
        <member name="P:Footloose.DataModel.SerializerFeatureFindCriterion.Feature">
            <summary>
            Gets the service discovery feature represented by this <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.
            </summary>
        </member>
        <member name="T:Footloose.DataModel.ServiceContractFeatureFindCriterion">
            <summary>
            A service contract criterion.
            </summary>
        </member>
        <member name="M:Footloose.DataModel.ServiceContractFeatureFindCriterion.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.DataModel.ServiceContractFeatureFindCriterion"/> criterion
            with the provided service contract type.
            </summary>
            <param name="serviceContract">Type of the service contract.</param>
        </member>
        <member name="P:Footloose.DataModel.ServiceContractFeatureFindCriterion.Feature">
            <summary>
            Gets the service discovery feature represented by this <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.
            </summary>
        </member>
        <member name="T:Footloose.EndpointIdentityManagerBase">
            <summary>
            Abstract base class that manages <see cref="T:Footloose.DataModel.IEndpointIdentity"/> objects.
            </summary>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.#ctor(Footloose.DataModel.EndpointIdentityDictionary,Footloose.DataModel.SelfEndpointIdentity,System.Func{System.Uri,Footloose.DataModel.EndpointIdentity})">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.EndpointIdentityManagerBase"/> class.
            </summary>
            <param name="endpointIdentityDictionary">The <see cref="T:Footloose.DataModel.EndpointIdentityDictionary"/>.</param>
            <param name="selfEndpointIdentity">The <see cref="P:Footloose.EndpointIdentityManagerBase.SelfEndpointIdentity"/>.</param>
            <param name="endpointIdentityFactory">The <see cref="T:Footloose.DataModel.EndpointIdentity"/> factory.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.Find">
            <summary>
            Find <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> objects with a simplified search API
            by using <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/> and Linq.
            </summary>
            <returns>A instance of a <see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.FindByExposingServiceContractOfType``1">
            <summary>
            Find <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> objects with a simplified search API
            by using <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/> and Linq
            that expose the specifed service contract.
            </summary>
            <typeparam name="TServiceContract">The service contract.</typeparam>
            <returns>A instance of a <see cref="T:Footloose.DataModel.IEndpointFindCriteria"/>.</returns>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.SendSelfPresence(Footloose.DataModel.DataTransferObjects.Presence)">
            <summary>
            Send the <see cref="T:Footloose.DataModel.DataTransferObjects.Presence"/> of this instance to all subscribed endpoints.
            </summary>
            <param name="presence">The <see cref="T:Footloose.DataModel.DataTransferObjects.Presence"/> of this instance.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.NotifyPresenceNotificationReceived(Footloose.DataModel.IPresence)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.IPresence"/>
            from another endpoint received.
            </summary>
            <param name="presence">The <see cref="T:Footloose.DataModel.IPresence"/> notification from another endpoint.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.NotifyPresenceSubscriptionRequestReceived(System.Uri,Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest,System.Boolean@)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/>
            from another endpoint received.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="presenceSubscriptionRequest">The <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/>.</param>
            <param name="approved">A value indicating if the subscription request was approved.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.NotifyPresenceSubscriptionResponseReceived(System.Uri,Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse"/>
            from another endpoint received.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="presenceSubscriptionResponse">The <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse"/>.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.NotifyPresenceUnsubscribeReceived(System.Uri)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceUnsubscribe"/> message
            from another endpoint received.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.NotifyServiceDiscoveryInfoReceived(System.String,Footloose.DataModel.DataTransferObjects.DiscoInfo)">
            <summary>
            Notify this <see cref="T:Footloose.IEndpointIdentityManager"/> when a new <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfo"/>
            from another endpoint received.
            </summary>
            <param name="caps">The capabilities version the disco info belongs to.</param>
            <param name="discoInfo">The requested disco information.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.AddEndpointIdentity(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and list of groups to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.UpdateEndpointIdentity(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the name and list of groups of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.RemoveEndpointIdentity(System.Uri)">
            <summary>
            Removes the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> from the collection
            and unsubcribe from the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.SendSubscribtionRequest(System.Uri,System.String)">
            <summary>
            Sends a subscription request with the specified reason
            to permanently subscribe to a identity's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="reason">A reason that explains the subscription request.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.UnsubscribeFrom(System.Uri)">
            <summary>
            Unsubscribe from the identity's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.RevokeSubscriptionFrom(System.Uri)">
            <summary>
            Cancel and revoke the identity's subscription to this instance's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.HandlePresenceCapabilitiesUpdate(Footloose.DataModel.IPresence)">
            <summary>
            Handle capabilities version send within a presence notifications.
            </summary>
            <param name="presence">The <see cref="T:Footloose.DataModel.IPresence"/> notification to handle.</param>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.GetIdentityUriFromEndpointUri(System.Uri)">
            <summary>
            Gets the <see cref="T:System.Uri"/> from the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>
            of this <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/>.</param>
            <returns>The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</returns>
        </member>
        <member name="M:Footloose.EndpointIdentityManagerBase.RequestDiscoInfo(System.Uri,System.String)">
            <summary>
            Request asynchronously service discovery information from the given service with the specified capabilities.
            </summary>
            <param name="to">The service to request the disco information from.</param>
            <param name="capabilities">The provided capabilities of the service.</param>
        </member>
        <member name="E:Footloose.EndpointIdentityManagerBase.PresenceNotificationReceived">
            <summary>
            Event that occurs when a <see cref="T:Footloose.DataModel.IPresence"/> notification received.
            </summary>
        </member>
        <member name="E:Footloose.EndpointIdentityManagerBase.PresenceSubscriptionRequestReceived">
            <summary>
            Event that occurs when a new <see cref="T:Footloose.DataModel.IPresence"/> subscription requests received.
            </summary>
        </member>
        <member name="E:Footloose.EndpointIdentityManagerBase.PresenceSubscriptionResponseReceived">
            <summary>
            Event that occurs when a new <see cref="T:Footloose.DataModel.IPresence"/> subscription response received.
            </summary>
        </member>
        <member name="P:Footloose.EndpointIdentityManagerBase.Footloose#IEndpointIdentityManager#EndpointIdentities">
            <summary>
            Gets a list of <see cref="T:Footloose.DataModel.IEndpointIdentity"/> objects.
            </summary>
        </member>
        <member name="P:Footloose.EndpointIdentityManagerBase.Capabilities">
            <summary>
            Gets a list of discovered service capabilities.
            </summary>
        </member>
        <member name="P:Footloose.EndpointIdentityManagerBase.Footloose#IEndpointIdentityManager#SelfEndpointIdentity">
            <summary>
            Returns an instance of <see cref="T:Footloose.DataModel.ISelfEndpointIdentity"/> for
            interaction with the endpoint of this service node.
            </summary>
        </member>
        <member name="P:Footloose.EndpointIdentityManagerBase.EndpointIdentities">
            <summary>
            Gets a <see cref="T:Footloose.DataModel.EndpointIdentityDictionary"/> of <see cref="T:Footloose.DataModel.EndpointIdentity"/> objects
            for internal interaction.
            </summary>
        </member>
        <member name="P:Footloose.EndpointIdentityManagerBase.SelfEndpointIdentity">
            <summary>
            Returns an instance of <see cref="P:Footloose.EndpointIdentityManagerBase.SelfEndpointIdentity"/> for
            internal interaction with the endpoint of this service node.
            </summary>
        </member>
        <member name="T:Footloose.FeatureFindCriterion">
            <summary>
            Static factory class that provide build in <see cref="T:Footloose.FeatureFindCriterion"/>. 
            </summary>
        </member>
        <member name="M:Footloose.FeatureFindCriterion.ServiceContract``1">
            <summary>
            Create a new service contract criterion.
            </summary>
            <typeparam name="TServiceContract">The service contract.</typeparam>
            <returns>An instance of a <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.</returns>
        </member>
        <member name="M:Footloose.FeatureFindCriterion.ServiceContract(System.Type)">
            <summary>
            Create a new service contract criterion.
            </summary>
            <param name="serviceContract">The service contract.</param>
            <returns>An instance of a <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.</returns>
        </member>
        <member name="M:Footloose.FeatureFindCriterion.Serializer``1">
            <summary>
            Create a new serializer type criterion.
            </summary>
            <typeparam name="TSerializer">Type of the serializer.</typeparam>
            <returns>An instance of a <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.</returns>
        </member>
        <member name="M:Footloose.FeatureFindCriterion.Serializer(System.Type)">
            <summary>
            Create a new serializer type criterion.
            </summary>
            <param name="serializer">Type of the serializer.</param>
            <returns>An instance of a <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.</returns>
        </member>
        <member name="M:Footloose.FeatureFindCriterion.ProtocolVersion(System.Version)">
            <summary>
            Create a new Footloose communication protocol version criterion.
            </summary>
            <param name="protocolVersion">The version of the Footloose communication protocol.</param>
            <returns>An instance of a <see cref="T:Footloose.DataModel.IEndpointFeatureFindCriterion"/>.</returns>
        </member>
        <member name="T:Footloose.Fluently">
            <summary>
            Fluently configure Footloose
            </summary>
        </member>
        <member name="M:Footloose.Fluently.Configure">
            <summary>
            Begin fluently configuring Footloose.
            </summary>
            <returns>A <see cref="T:Footloose.Configuration.Fluent.FluentConfiguration"/> object.</returns>
        </member>
        <member name="M:Footloose.Fluently.Configure(Footloose.Configuration.FootlooseConfigurationSectionGroup)">
            <summary>
            Begin fluently configuring Footloose with the
            specified <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> to configure.</param>
            <returns>A <see cref="T:Footloose.Configuration.Fluent.FluentConfiguration"/> object.</returns>
        </member>
        <member name="T:Footloose.FootlooseConnectionFactory">
            <summary>
            A static factory to initialize <see cref="T:Footloose.IFootlooseConnection"/> instances.
            </summary>
        </member>
        <member name="M:Footloose.FootlooseConnectionFactory.CreateFootlooseConnection">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.IFootlooseConnection"/>
            that uses the configuration properties from the application configuration.
            </summary>
            <returns>A new <see cref="T:Footloose.IFootlooseConnection"/> instance.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnectionFactory.CreateFootlooseConnection(Footloose.Configuration.FootlooseConfigurationSectionGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.IFootlooseConnection"/>
            that uses the provided configuration.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.FootlooseConfigurationSectionGroup"/> for the new
            <see cref="T:Footloose.IFootlooseConnection"/> instance.</param>
            <returns>A new <see cref="T:Footloose.IFootlooseConnection"/> instance.</returns>
        </member>
        <member name="M:Footloose.IFootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Threading.CancellationToken)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            The remote endpoint <see cref="T:System.Uri"/> will be determined with the auto service discovery feature.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.IFootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Threading.CancellationToken,System.Uri)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>
            with the specified endpoint <see cref="T:System.Uri"/>.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <param name="service">The <see cref="T:System.Uri"/> of the service the method should invoked on.</param>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.IFootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Action{Footloose.DataModel.IMethodResponse{``0}})">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            The remote endpoint <see cref="T:System.Uri"/> will be determined with the auto service discovery feature.
            Once the method call returns the callback action delegate is called.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="callback">The callback method.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.IFootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Action{Footloose.DataModel.IMethodResponse{``0}},System.Uri)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>
            with the specified endpoint <see cref="T:System.Uri"/>.
            Once the method call returns the callback action delegate is called.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="callback">The callback method.</param>
            <param name="service">The <see cref="T:System.Uri"/> of the service the method should invoked on.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.IFootlooseConnection.CallMethod``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            The remote endpoint <see cref="T:System.Uri"/> will be determined with the auto service discovery feature.
            Once the method call returns the <see cref="E:Footloose.IFootlooseConnection.MethodResponseReceived"/> event ist called.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.IFootlooseConnection.CallMethod``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Uri)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>
            with the specified endpoint <see cref="T:System.Uri"/>.
            Once the method call returns the <see cref="E:Footloose.IFootlooseConnection.MethodResponseReceived"/> event ist called.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="service">The <see cref="T:System.Uri"/> of the service the method should invoked on.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.IFootlooseConnection.Open">
            <summary>
            Opens the connection with the configured transport channel.
            </summary>
        </member>
        <member name="M:Footloose.IFootlooseConnection.Close">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="P:Footloose.IFootlooseConnection.EndpointIdentityManager">
            <summary>
            Gets an instance of the <see cref="T:Footloose.IEndpointIdentityManager"/>.
            </summary>
        </member>
        <member name="P:Footloose.IFootlooseConnection.ExposedServiceContracts">
            <summary>
            Gets a list of exposed service contracts from the <see cref="T:Footloose.Configuration.ServiceContractConfigurationElementCollection"/>.
            </summary>
        </member>
        <member name="P:Footloose.IFootlooseConnection.ProtocolVersion">
            <summary>
            Gets the version of the Footloose communication protocol.
            </summary>
        </member>
        <member name="P:Footloose.IFootlooseConnection.IsConnected">
            <summary>
            Gets the current state of the connection.
            true if the connection is open and established; otherwise, false.
            </summary>
        </member>
        <member name="P:Footloose.IFootlooseConnection.IsDisposed">
            <summary>
            Gets a value indicating whether the class has been disposed of.
            true if the class has been disposed of; otherwise, false. 
            </summary>
        </member>
        <member name="T:Footloose.IMethodInvoker">
            <summary>
            Invokes a specified method of a given type.
            </summary>
        </member>
        <member name="M:Footloose.IMethodInvoker.InvokeMethod(System.Type,System.String,System.Object[])">
            <summary>
            Invokes the specified method on the specified type.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="M:Footloose.IMethodInvoker.InvokeMethod(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Object[])">
            <summary>
            Invokes the specified method on the specified type and matching the specified method signature.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="signature">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the parameters for the method.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="M:Footloose.IMethodInvoker.InvokeGenericMethod(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Object[])">
            <summary>
            Invokes the specified generic method on the specified type.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="genericArguments">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the generic arguments for the method.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="M:Footloose.IMethodInvoker.InvokeGenericMethod(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type},System.Object[])">
            <summary>
            Invokes the specified generic method on the specified type and matching the specified method signature.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="genericArguments">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the generic arguments for the method.</param>
            <param name="signature">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the parameters for the method.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="T:Footloose.Messaging.PresenceSubscriptionRequestMessageHandler">
            <summary>
            Process incoming <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/> messages.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.PresenceSubscriptionRequestMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="T:Footloose.Messaging.PresenceSubscriptionResponseMessageBuilder">
            <summary>
            Builds up messages from <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionResponse"/> objects.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.PresenceSubscriptionResponseMessageBuilder.#ctor(Footloose.Serialization.ISerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.DiscoInfoResponseMessageBuilder"/> class with
            specified <see cref="T:Footloose.Serialization.ISerializer"/>.
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:Footloose.Messaging.PresenceSubscriptionResponseMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.Messaging.PresenceSubscriptionRequestMessageBuilder">
            <summary>
            Builds up messages from <see cref="T:Footloose.DataModel.DataTransferObjects.PresenceSubscriptionRequest"/> objects.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.PresenceSubscriptionRequestMessageBuilder.#ctor(Footloose.Serialization.ISerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.DiscoInfoRequestMessageBuilder"/> class with
            specified <see cref="T:Footloose.Serialization.ISerializer"/>.
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:Footloose.Messaging.PresenceSubscriptionRequestMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.Messaging.MessageErrorMessageHandler">
            <summary>
            Process incoming messages of type 'Error' and notify the outgoing message queue.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.MessageErrorMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="T:Footloose.Messaging.DiscoInfoResponseMessageHandler">
            <summary>
            Process incoming <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfoResponse"/> messages.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.DiscoInfoResponseMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="T:Footloose.Messaging.DiscoInfoRequestMessageHandler">
            <summary>
            Process incoming <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfoRequest"/> messages.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.DiscoInfoRequestMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="T:Footloose.Messaging.DiscoInfoResponseMessageBuilder">
            <summary>
            Builds up messages from <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfoResponse"/> objects.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.DiscoInfoResponseMessageBuilder.#ctor(Footloose.Serialization.ISerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.DiscoInfoResponseMessageBuilder"/> class with
            specified <see cref="T:Footloose.Serialization.ISerializer"/>.
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:Footloose.Messaging.DiscoInfoResponseMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.Messaging.DiscoInfoRequestMessageBuilder">
            <summary>
            Builds up messages from <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfoRequest"/> objects.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.DiscoInfoRequestMessageBuilder.#ctor(Footloose.Serialization.ISerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.DiscoInfoRequestMessageBuilder"/> class with
            specified <see cref="T:Footloose.Serialization.ISerializer"/>.
            </summary>
            <param name="serializer"></param>
        </member>
        <member name="M:Footloose.Messaging.DiscoInfoRequestMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.Messaging.MessageResultMessageHandler">
            <summary>
            Process incoming messages of type 'Result' and notify the outgoing message queue.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.MessageResultMessageHandler.ProcessMessage(Footloose.Messaging.Message)">
            <summary>
            Process the specified incoming message.
            </summary>
            <param name="message">The incoming message to process.</param>
        </member>
        <member name="M:Footloose.MethodCallManager.GetMethodCallFromExpression``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Gets a <see cref="T:Footloose.DataModel.DataTransferObjects.MethodCall"/> data transfer object from a <see cref="T:System.Linq.Expressions.MethodCallExpression"/>.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method call.</param>
            <returns>A <see cref="T:Footloose.DataModel.DataTransferObjects.MethodCall"/> data transfer object.</returns>
        </member>
        <member name="M:Footloose.MethodCallManager.GetArgumentValueFromExpression(System.Linq.Expressions.Expression)">
            <summary>
            Gets the value of an <see cref="T:System.Linq.Expressions.Expression"/> argument.
            </summary>
            <remarks>
            See http://stackoverflow.com/questions/2503316/how-do-i-get-a-value-of-a-reference-type-in-an-expression
            for futher information.
            </remarks>
            <param name="expression">The <see cref="T:System.Linq.Expressions.Expression"/>.</param>
            <returns>The value of the argument of the <see cref="T:System.Linq.Expressions.Expression"/>.</returns>
        </member>
        <member name="T:Footloose.MethodCallManager.MethodCallStateData">
            <summary>
            Internal data structure to save state information
            about a single method call.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.MethodResponseMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.Messaging.MessageBufferRepository">
            <summary>
            In-Memory buffer repository for incoming message chunks.
            </summary>
        </member>
        <member name="T:Footloose.Extensions.StringExtensions">
            <summary>
            Provide extensions for the <see cref="T:System.String" /> type.
            </summary>
        </member>
        <member name="M:Footloose.Extensions.StringExtensions.GetChunks(System.String,System.Int32)">
            <summary>
            Break the string down into chunks with each being the
            specified chunk length characters long.
            </summary>
            <param name="value">The input string.</param>
            <param name="maxChunkLength">Maximum length of the chunk.</param>
            <returns>A IList of chunks of the string.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.Finalize">
            <summary>
            This destructor will run only if the Dispose method
            does not get called.
            </summary>
        </member>
        <member name="M:Footloose.FootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Threading.CancellationToken)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            The remote endpoint <see cref="T:System.Uri"/> will be determined with the auto service discovery feature.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Threading.CancellationToken,System.Uri)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>
            with the specified endpoint <see cref="T:System.Uri"/>.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <param name="service">The <see cref="T:System.Uri"/> of the service the method should invoked on.</param>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Action{Footloose.DataModel.IMethodResponse{``0}})">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            The remote endpoint <see cref="T:System.Uri"/> will be determined with the auto service discovery feature.
            Once the method call returns the callback action delegate is called.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="callback">The callback method.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.CallMethod``2(System.Linq.Expressions.Expression{System.Action{``1}},System.Action{Footloose.DataModel.IMethodResponse{``0}},System.Uri)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>
            with the specified endpoint <see cref="T:System.Uri"/>.
            Once the method call returns the callback action delegate is called.
            </summary>
            <typeparam name="TResult">The type of the return value of the method.</typeparam>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="callback">The callback method.</param>
            <param name="service">The <see cref="T:System.Uri"/> of the service the method should invoked on.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.CallMethod``1(System.Linq.Expressions.Expression{System.Action{``0}})">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.
            The remote endpoint <see cref="T:System.Uri"/> will be determined with the auto service discovery feature.
            Once the method call returns the <see cref="E:Footloose.IFootlooseConnection.MethodResponseReceived"/> event ist called.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.CallMethod``1(System.Linq.Expressions.Expression{System.Action{``0}},System.Uri)">
            <summary>
            Invokes asynchronous the specified method of the given <see cref="T:System.Type"/> on a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>
            with the specified endpoint <see cref="T:System.Uri"/>.
            Once the method call returns the <see cref="E:Footloose.IFootlooseConnection.MethodResponseReceived"/> event ist called.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="methodExpression">The lambda expression of the method that should be called on the <typeparamref name="TService"/> type.</param>
            <param name="service">The <see cref="T:System.Uri"/> of the service the method should invoked on.</param>
            <returns>A unique correlation identifier for this method call.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.Open">
            <summary>
            Brings the transport channel online.
            </summary>
        </member>
        <member name="M:Footloose.FootlooseConnection.Close">
            <summary>
            Disconnects the transport channel.
            </summary>
        </member>
        <member name="M:Footloose.FootlooseConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Footloose.FootlooseConnection.Dispose(System.Boolean)">
            <summary>
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">Indicator that the method as been called by user's code.</param>
        </member>
        <member name="M:Footloose.FootlooseConnection.DetermineServiceUriByCapabilities(System.Type)">
            <summary>
            Try to determine the uri of the <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> with the highest
            priority, that is not unavailable and expose the provided service contract.
            </summary>
            <param name="serviceContract">The service contract the <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> must expose.</param>
            <returns>A <see cref="T:System.Uri"/> of the found <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/>.</returns>
        </member>
        <member name="M:Footloose.FootlooseConnection.CreateDiscoInfo">
            <summary>
            Create the service discovery <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfo"/> object for this
            endpoint.
            </summary>
            <returns>An instance of a <see cref="T:Footloose.DataModel.DataTransferObjects.DiscoInfo"/>.</returns>
        </member>
        <member name="P:Footloose.FootlooseConnection.EndpointIdentityManager">
            <summary>
            Gets an instance of the <see cref="T:Footloose.IEndpointIdentityManager"/>.
            </summary>
        </member>
        <member name="P:Footloose.FootlooseConnection.ExposedServiceContracts">
            <summary>
            Gets a list of exposed service contracts from the <see cref="T:Footloose.Configuration.ServiceContractConfigurationSection"/>.
            </summary>
        </member>
        <member name="P:Footloose.FootlooseConnection.ProtocolVersion">
            <summary>
            Gets the version of the Footloose communication protocol.
            </summary>
        </member>
        <member name="P:Footloose.FootlooseConnection.IsConnected">
            <summary>
            Gets the current state of the connection.
            true if the connection is established; otherwise, false.
            </summary>
        </member>
        <member name="P:Footloose.FootlooseConnection.IsDisposed">
            <summary>
            Gets a value indicating whether the class has been disposed of.
            true if the class has been disposed of; otherwise, false. 
            </summary>
        </member>
        <member name="T:Footloose.Messaging.Message">
            <summary>
            Class for serializable messaging that contains communication data sent between services.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.Message.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.Message"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Messaging.Message.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Messaging.Message"/> class
            with the specified Uri of the recipient for the message and message body.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageBody">The body of the message.</param>
        </member>
        <member name="M:Footloose.Messaging.Message.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor.
            </summary>
            <param name="info">The SerializationInfo to get the data from.</param>
            <param name="context">The context of this serialization.</param>
        </member>
        <member name="M:Footloose.Messaging.Message.GetNextId">
            <summary>
            Generates a new unique message id.
            </summary>
            <returns>A new message id.</returns>
        </member>
        <member name="M:Footloose.Messaging.Message.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">The SerializationInfo to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="P:Footloose.Messaging.Message.Id">
            <summary>
            Gets or sets the unique transport channel identifier of this message
            for internal tracking of the request-response interaction.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.Type">
            <summary>
            Gets or sets the <see cref="T:Footloose.Messaging.MessageType"/> of
            this message.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.From">
            <summary>
            Gets or sets the Uri of the sender of this message.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.To">
            <summary>
            Gets or sets the Uri of the recipient for the message.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.BodyType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> of
            the message body.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.Body">
            <summary>
            Gets or sets the Body of the message.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.CorrelationIdentifier">
            <summary>
            Gets or sets the unique correlation identifier for a message context.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.BodyChunkIndex">
            <summary>
            Gets or sets the unique index of this chunk.
            This index acts as a counter for data chunks sent within this
            correlation identifier.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.BodyChunkCount">
            <summary>
            Gets or sets the number of chunks.
            </summary>
        </member>
        <member name="P:Footloose.Messaging.Message.Headers">
            <summary>
            Gets the headers of the message. 
            </summary>
        </member>
        <member name="T:Footloose.Messaging.MessageType">
            <summary>
            Defines types of messages.
            </summary>
        </member>
        <member name="F:Footloose.Messaging.MessageType.Get">
            <summary>
            A message that requests information, inquires about
            what data is needed in order to complete further operations, etc.
            <remarks>
            <para>
            A communication endpoint hat receives a message of type Get must reply
            with a message of type Result or Error.
            </para>
            <para>
            The response must preserve the 'id' attribute of the request.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="F:Footloose.Messaging.MessageType.Set">
            <summary>
            A message that provides data.
            <remarks>
            <para>A communication endpoint hat receives a message of type Set must reply
            with a message of type Result or Error.
            </para>
            <para>
            The response must preserve the 'id' attribute of the request.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="F:Footloose.Messaging.MessageType.Result">
            <summary>
            A message that is a response to a successful get or set request.
            <remarks>
            <para>
            A Result message must not include any message body.
            </para>
            <para>
            A communication endpoint hat receives a message of type Result must not
            response with any further message of type Result or Error.
            </para>
            </remarks>
            </summary>
        </member>
        <member name="F:Footloose.Messaging.MessageType.Error">
            <summary>
            A message that reports an error that has occurred regarding
            processing or delivery of a previously-sent get or set request.
            <remarks><para>
            A communication endpoint hat receives a message of type Result must not response with any further message of type Result or Error.
            </para></remarks>
            </summary>
        </member>
        <member name="F:Footloose.Messaging.MessageType.Notification">
            <summary>
            A message that notify other endpoints about certain events.
            <remarks><para>
            This is a one-way message. A communication endpoint hat receives a message of type Notification
            must not response with any further message of type Result or Error.
            </para></remarks>
            </summary>
        </member>
        <member name="M:Footloose.Messaging.MethodCallMessageBuilder.BuildupMessages(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Build up a list of messages for the specified transport channel
            with the provided message data.
            </summary>
            <param name="to">The Uri of the recipient for the message.</param>
            <param name="messageData">The data of the message.</param>
            <returns>A <see cref="T:Footloose.Messaging.MessageBundle"/> that contains the created messages.</returns>
        </member>
        <member name="T:Footloose.MethodResponseEventArgs">
            <summary>
            Provides data for the <see cref="E:Footloose.IFootlooseConnection.MethodResponseReceived" /> event.
            When a method call response receive operation calls an event handler,
            an instance of this class is passed to the handler.
            </summary>
        </member>
        <member name="M:Footloose.MethodResponseEventArgs.#ctor(Footloose.DataModel.IMethodResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.MethodResponseEventArgs" /> class
            with the specified <see cref="T:Footloose.DataModel.MethodResponse" />.
            </summary>
            <param name="methodResponse">The <see cref="T:Footloose.DataModel.MethodResponse" /> from a method call.</param>
        </member>
        <member name="P:Footloose.MethodResponseEventArgs.MethodResponse">
            <summary>
            Gets the <see cref="T:Footloose.DataModel.MethodResponse" /> from a method call.
            </summary>
        </member>
        <member name="T:Footloose.PresenceEventArgs">
            <summary>
            Provides data for the <see cref="E:Footloose.IEndpointIdentityManager.PresenceNotificationReceived"/>
            event. When a new presence notification received an instance of this class is passed to the handler.
            </summary>
        </member>
        <member name="M:Footloose.PresenceEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.PresenceEventArgs" /> class.
            </summary>
        </member>
        <member name="M:Footloose.PresenceEventArgs.#ctor(Footloose.DataModel.IPresence)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.PresenceEventArgs"/> class
            with the specified <see cref="T:Footloose.DataModel.IPresence"/>.
            </summary>
            <param name="presence">The <see cref="T:Footloose.DataModel.IPresence"/> notification.</param>
        </member>
        <member name="P:Footloose.PresenceEventArgs.Presence">
            <summary>
            Gets or sets the <see cref="T:Footloose.DataModel.IPresence"/> notification.
            </summary>
        </member>
        <member name="T:Footloose.ReflectionMethodInvoker">
            <summary>
            Invokes a specified method of a given type.
            </summary>
        </member>
        <member name="M:Footloose.ReflectionMethodInvoker.#ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.ReflectionMethodInvoker"/> class
            with the specified <see cref="T:Microsoft.Practices.ServiceLocation.IServiceLocator"/>.
            </summary>
            <param name="serviceLocator">Instance of the <see cref="T:Microsoft.Practices.ServiceLocation.IServiceLocator"/>.</param>
        </member>
        <member name="M:Footloose.ReflectionMethodInvoker.InvokeMethod(System.Type,System.String,System.Object[])">
            <summary>
            Invokes the specified method on the specified type.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="M:Footloose.ReflectionMethodInvoker.InvokeMethod(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Object[])">
            <summary>
            Invokes the specified method on the specified type and matching the specified method signature.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="signature">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the parameters for the method.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="M:Footloose.ReflectionMethodInvoker.InvokeGenericMethod(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Object[])">
            <summary>
            Invokes the specified generic method on the specified type.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="genericArguments">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the generic arguments for the method.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="M:Footloose.ReflectionMethodInvoker.InvokeGenericMethod(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.Type},System.Object[])">
            <summary>
            Invokes the specified generic method on the specified type and matching the specified method signature.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> the method belongs to.</param>
            <param name="methodName">The <see cref="T:System.String"/> containing the method name.</param>
            <param name="genericArguments">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the generic arguments for the method.</param>
            <param name="signature">An array of <see cref="T:System.Type"/> objects representing the number, order, and type of the parameters for the method.</param>
            <param name="methodArgs">An array containing the arguments to pass to the method to invoke.</param>
            <returns>An <see cref="T:System.Object"/> representing the return value of the invoked member.</returns>
        </member>
        <member name="M:Footloose.ReflectionMethodInvoker.MatchMethodSignature(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Check whether the given method signature matches the signature of the given method info.
            </summary>
            <param name="methodInfo">The method info to check.</param>
            <param name="signature">The method signature to compare.</param>
            <returns>Returns true if the given method signature matches the signature of the method info signature; otherwise false.</returns>
        </member>
        <member name="T:Footloose.Security.AuthenticatedOnlyAuthorizationProvider">
            <summary>
            Defines a <see cref="T:Footloose.Security.IAuthorizationProvider"/> that validate only endpoints that
            are subscribed to the <see cref="T:Footloose.DataModel.IPresence"/> of this instance.
            </summary>
        </member>
        <member name="T:Footloose.Security.IAuthorizationProvider">
            <summary>
            Defines the contract that Footlooses implements to provide authorization services
            using custom authorization providers. 
            The implementing class validates requests of method calls
            and method responses.
            </summary>
            <remarks>
            The <see cref="T:Footloose.Security.IAuthorizationProvider"/> can be configured in the
            <see cref="T:Footloose.Configuration.SecurityConfigurationSection"/> with the <see cref="T:Footloose.Configuration.AuthorizationProviderConfigurationElementBase"/>.
            </remarks>
        </member>
        <member name="M:Footloose.Security.IAuthorizationProvider.ValidateMethodCallRequest(System.Uri,Footloose.DataModel.IMethodCallRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodCallRequest">The <see cref="T:Footloose.DataModel.IMethodCallRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="M:Footloose.Security.IAuthorizationProvider.ValidateMethodResponseRequest(System.Uri,Footloose.DataModel.IMethodResponseRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodResponseRequest">The <see cref="T:Footloose.DataModel.IMethodResponseRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="M:Footloose.Security.AuthenticatedOnlyAuthorizationProvider.#ctor(Footloose.IEndpointIdentityManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Security.AuthenticatedOnlyAuthorizationProvider"/> class
            with the specified <see cref="T:Footloose.IEndpointIdentityManager"/>.
            </summary>
            <param name="endpointIdentityManager">The <see cref="T:Footloose.IEndpointIdentityManager"/>.</param>
        </member>
        <member name="M:Footloose.Security.AuthenticatedOnlyAuthorizationProvider.ValidateMethodCallRequest(System.Uri,Footloose.DataModel.IMethodCallRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodCallRequest">The <see cref="T:Footloose.DataModel.IMethodCallRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="M:Footloose.Security.AuthenticatedOnlyAuthorizationProvider.ValidateMethodResponseRequest(System.Uri,Footloose.DataModel.IMethodResponseRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodResponseRequest">The <see cref="T:Footloose.DataModel.IMethodResponseRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="T:Footloose.Security.AuthorizationManager">
            <summary>
            Represents a class that validates requests for method calls
            and method responses using a custom implementations of <see cref="T:Footloose.Security.IAuthorizationProvider"/>.
            </summary>
        </member>
        <member name="T:Footloose.Security.IAuthorizationManager">
            <summary>
            Represents a interface for a class that validates requests for method calls
            and method responses.
            </summary>
        </member>
        <member name="M:Footloose.Security.IAuthorizationManager.ValidateMethodCallRequest(System.Uri,Footloose.DataModel.IMethodCallRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodCallRequest">The <see cref="T:Footloose.DataModel.IMethodCallRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="M:Footloose.Security.IAuthorizationManager.ValidateMethodResponseRequest(System.Uri,Footloose.DataModel.IMethodResponseRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodResponseRequest">The <see cref="T:Footloose.DataModel.IMethodResponseRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="M:Footloose.Security.AuthorizationManager.ValidateMethodCallRequest(System.Uri,Footloose.DataModel.IMethodCallRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodCallRequest">The <see cref="T:Footloose.DataModel.IMethodCallRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="M:Footloose.Security.AuthorizationManager.ValidateMethodResponseRequest(System.Uri,Footloose.DataModel.IMethodResponseRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodResponseRequest">The <see cref="T:Footloose.DataModel.IMethodResponseRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="T:Footloose.Security.DefaultAuthorizationProvider">
            <summary>
            Defines a <see cref="T:Footloose.Security.IAuthorizationProvider"/> that validate every endpoint.
            </summary>
        </member>
        <member name="M:Footloose.Security.DefaultAuthorizationProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Security.DefaultAuthorizationProvider"/> class
            with the specified <see cref="T:Footloose.IEndpointIdentityManager"/>.
            </summary>
        </member>
        <member name="M:Footloose.Security.DefaultAuthorizationProvider.ValidateMethodCallRequest(System.Uri,Footloose.DataModel.IMethodCallRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodCallRequest">The <see cref="T:Footloose.DataModel.IMethodCallRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodCallRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="M:Footloose.Security.DefaultAuthorizationProvider.ValidateMethodResponseRequest(System.Uri,Footloose.DataModel.IMethodResponseRequest)">
            <summary>
            Validates if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> from the specified sender
            is authorized.
            </summary>
            <param name="from">The <see cref="T:System.Uri"/> of the sender.</param>
            <param name="methodResponseRequest">The <see cref="T:Footloose.DataModel.IMethodResponseRequest"/>.</param>
            <returns>True if the <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> is authorized; otherwise false.</returns>
        </member>
        <member name="T:Footloose.Security.NotAuthorizedException">
            <summary>
            Represents errors that occur when a <see cref="T:Footloose.DataModel.IMethodCallRequest"/> or
            <see cref="T:Footloose.DataModel.IMethodResponseRequest"/> was not authorized.
            </summary>
        </member>
        <member name="M:Footloose.Security.NotAuthorizedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Security.NotAuthorizedException"/> class.
            </summary>
        </member>
        <member name="M:Footloose.Security.NotAuthorizedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Security.NotAuthorizedException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Footloose.Security.NotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Security.NotAuthorizedException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Footloose.Security.NotAuthorizedException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Security.NotAuthorizedException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.Security.NotAuthorizedException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.Security.NotAuthorizedException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.Security.NotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="T:Footloose.Security.Cryptography.IHashAlgorithm">
            <summary>
            Defines the basic operations of hash algorithms.
            </summary>
        </member>
        <member name="M:Footloose.Security.Cryptography.IHashAlgorithm.ComputeHash(System.String,System.String)">
            <summary>
            Computes the hash value for the specified string.
            </summary>
            <param name="value">The string to compute the hash code for.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code as unicode string.</returns>
        </member>
        <member name="M:Footloose.Security.Cryptography.IHashAlgorithm.CheckString(System.String,System.String,System.String)">
            <summary>
            Cheks a plaintext string matches a previously hashed one.
            </summary>
            <param name="plaintext">The plaintext string to verify.</param>
            <param name="hashed">The previously hashed string.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>true if the string matches; otherwise false.</returns>
        </member>
        <member name="T:Footloose.Security.Cryptography.SHA512HashAlgorithm">
            <summary>
            Computes a Hash-based Message Authentication Code (HMAC) using the SHA256 hash function.
            </summary>
        </member>
        <member name="M:Footloose.Security.Cryptography.SHA512HashAlgorithm.ComputeHash(System.String,System.String)">
            <summary>
            Computes the hash value for the specified string.
            </summary>
            <param name="value">The string to compute the hash code for.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code as unicode string.</returns>
        </member>
        <member name="M:Footloose.Security.Cryptography.SHA512HashAlgorithm.CheckString(System.String,System.String,System.String)">
            <summary>
            Cheks a plaintext string matches a previously hashed one.
            </summary>
            <param name="plaintext">The plaintext string to verify.</param>
            <param name="hashed">The previously hashed string.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>true if the string matches; otherwise false.</returns>
        </member>
        <member name="T:Footloose.Serialization.BinarySerializer">
            <summary>
            Serializes and deserializes an object, or an entire
            graph of connected objects in Base64 encoded binary format.
            </summary>
        </member>
        <member name="T:Footloose.Serialization.ISerializer">
            <summary>
            Serializes and deserializes an object, or an entire graph of connected objects.
            </summary>
        </member>
        <member name="M:Footloose.Serialization.ISerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified object, or graph of objects.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> at the root of the graph to serialize.</param>
            <returns>The <see cref="T:System.String"/> to which the graph is to be serialized.</returns>
        </member>
        <member name="M:Footloose.Serialization.ISerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified <see cref="T:System.String"/> into an object graph.
            </summary>
            <typeparam name="T">Type of the top (root) of the object graph.</typeparam>
            <param name="data">The <see cref="T:System.String"/> that contains the object graph to deserialize.</param>
            <returns>The top (root) of the object graph.</returns>
        </member>
        <member name="M:Footloose.Serialization.BinarySerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified object, or graph of objects.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> at the root of the graph to serialize.</param>
            <returns>The <see cref="T:System.String"/> to which the graph is to be serialized.</returns>
        </member>
        <member name="M:Footloose.Serialization.BinarySerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified <see cref="T:System.String"/> into an object graph.
            </summary>
            <typeparam name="T">Type of the top (root) of the object graph.</typeparam>
            <param name="data">The <see cref="T:System.String"/> that contains the object graph to deserialize.</param>
            <returns>The top (root) of the object graph.</returns>
        </member>
        <member name="T:Footloose.Serialization.TextSerializer">
            <summary>
            Serializes and deserializes an object, or an entire
            graph of connected objects in a json like text format.
            This very fast serializer is only suitable for .NET POCO types.
            </summary>
            <remarks>
            For further information check out the documentation
            at https://github.com/ServiceStack/ServiceStack.Text
            and http://www.servicestack.net/mythz_blog/?p=314.
            </remarks>
        </member>
        <member name="M:Footloose.Serialization.TextSerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified object, or graph of objects.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> at the root of the graph to serialize.</param>
            <returns>The <see cref="T:System.String"/> to which the graph is to be serialized.</returns>
        </member>
        <member name="M:Footloose.Serialization.TextSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified <see cref="T:System.String"/> into an object graph.
            </summary>
            <typeparam name="T">Type of the top (root) of the object graph.</typeparam>
            <param name="data">The <see cref="T:System.String"/> that contains the object graph to deserialize.</param>
            <returns>The top (root) of the object graph.</returns>
        </member>
        <member name="T:Footloose.TransportChannels.MessageResponseException">
            <summary>
            Represents errors that occur when a remote <see cref="T:Footloose.DataModel.ICommunicationEndpoint"/> respond with a
            <see cref="F:Footloose.Messaging.MessageType.Error"/> to a send <see cref="T:Footloose.Messaging.Message"/>.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.MessageResponseException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.MessageResponseException"/> class.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.MessageResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.MessageResponseException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.MessageResponseException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageResponseException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.MessageResponseException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageResponseException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.MessageResponseException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageResponseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="T:Footloose.TransportChannels.IMessageDispatcher">
            <summary>
            This interface defines a central dispatcher for incoming <see cref="T:Footloose.Messaging.Message"/> objects, dispatching them to
            registered <see cref="T:Footloose.Messaging.IMessageHandler"/>.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.IMessageDispatcher.Dispatch(Footloose.Messaging.Message)">
            <summary>
            Dispatches a incoming message to a registered <see cref="T:Footloose.Messaging.IMessageHandler"/> according to the
            messages's body type.
            </summary>
            <param name="message">The incoming <see cref="T:Footloose.Messaging.Message"/> object to dispatch.</param>
            <exception cref="T:Footloose.TransportChannels.MessageHandlerNotFoundException"><see cref="T:Footloose.Messaging.IMessageHandler"/> for specific <see cref="T:Footloose.Messaging.Message"/> is not found.</exception>
        </member>
        <member name="T:Footloose.TransportChannels.IMessageOriginator">
            <summary>
            This interface defines a central dispatcher for outgoing messages with provided <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> objects.
            </summary>
            <remarks>
            <para>
            It dispatches the provided <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> to specialized <see cref="T:Footloose.Messaging.IMessageBuilder"/> classes that
            builds <see cref="T:Footloose.Messaging.Message"/> objects from the provided data.
            </para>
            <para>
            In the second step it coordinate the send process via the configured <see cref="T:Footloose.TransportChannels.ITransportChannel"/> in parallel async tasks.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.TransportChannels.IMessageOriginator.EnqueueData(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Enqueues the given <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient with the
            provided <see cref="T:System.Uri"/>.
            </summary>
            <param name="to">The <see cref="T:System.Uri"/> of the recipient.</param>
            <param name="data">The <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient.</param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="to"/> is null.</para> 
            -or-
            <para><paramref name="data"/> is null.</para>
            </exception>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.TransportChannels.IMessageOriginator.EnqueueData(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData,System.Threading.CancellationToken)">
            <summary>
            Enqueues the given <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient with the
            provided <see cref="T:System.Uri"/>.
            </summary>
            <param name="to">The <see cref="T:System.Uri"/> of the recipient.</param>
            <param name="data">The <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="to"/> is null.</para> 
            -or-
            <para><paramref name="data"/> is null.</para>
            </exception>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.TransportChannels.IMessageOriginator.EnqueueResponse(Footloose.Messaging.Message)">
            <summary>
            Enqueues a response <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Result"/> or <see cref="F:Footloose.Messaging.MessageType.Error"/>.
            </summary>
            <param name="response">The response <see cref="T:Footloose.Messaging.Message"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="response"/> is null.</exception>
        </member>
        <member name="M:Footloose.TransportChannels.IMessageOriginator.NotifyMessageResult(System.String)">
            <summary>
            Notifies the <see cref="T:Footloose.TransportChannels.IMessageOriginator"/> that a <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Result"/>
            with the provided message id received.
            </summary>
            <param name="messageId">The id of the response <see cref="T:Footloose.Messaging.Message"/>.</param>
            <exception cref="T:System.ArgumentException"><paramref name="messageId"/> is null or empty.</exception>
        </member>
        <member name="M:Footloose.TransportChannels.IMessageOriginator.NotifyMessageException(System.String,System.Exception)">
            <summary>
            Notifies the <see cref="T:Footloose.TransportChannels.IMessageOriginator"/> that a <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Error"/>
            with the provided message id and <see cref="T:System.Exception"/> received.
            </summary>
            <param name="messageId">The id of the response <see cref="T:Footloose.Messaging.Message"/>.</param>
            <param name="exception">The <see cref="T:System.Exception"/> from this error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="messageId"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="exception"/> is null.</exception>
        </member>
        <member name="M:Footloose.TransportChannels.ITransportChannel.Connect">
            <summary>
            Brings the transport channel online.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.ITransportChannel.Disconnect">
            <summary>
            Disconnects the transport channel.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.ITransportChannel.SetDiscoInfo(Footloose.DataModel.DataTransferObjects.DiscoInfo)">
            <summary>
            Sets the service discovery information the transport channel should
            send on discovery requests.
            </summary>
            <param name="discoInfo">Service discovery information for this service node.</param>
        </member>
        <member name="M:Footloose.TransportChannels.ITransportChannel.SendMessage(Footloose.Messaging.Message)">
            <summary>
            Sends the specified message through this transport channel.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.IsConnected">
            <summary>
            Gets the current state of the connection.
            true if the connection is established; otherwise, false.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.EndpointIdentifier">
            <summary>
            Gets the identifier of this service node.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.ServiceUri">
            <summary>
            Gets the Uri of this service node.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.EndpointIdentityManager">
            <summary>
            Gets an instance of the <see cref="T:Footloose.IEndpointIdentityManager"/>.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.IsDisposed">
            <summary>
            Gets a value indicating whether the class has been disposed of.
            true if the class has been disposed of; otherwise, false. 
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.MaxMessageBodyLength">
            <summary>
             Gets the maximum length of the message body. The serializised message body must not exceed the
             specified maximum message body lenght; otherwise it'll be strip down into several smaller chunks
             and send separately.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.Timeout">
            <summary>
            Gets or sets the length of time, in milliseconds, before a request times out.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.ITransportChannel.Priority">
            <summary>
             Gets or sets the priority for this communication endpoint.
             The value must be an integer between -128 and +127.
             Default is 10.
            </summary>
        </member>
        <member name="T:Footloose.TransportChannels.MessageDispatcher">
            <summary>
            This implementation of <see cref="T:Footloose.TransportChannels.IMessageDispatcher"/> defines a central dispatcher for incoming <see cref="T:Footloose.Messaging.Message"/> objects, dispatching them to
            registered <see cref="T:Footloose.Messaging.IMessageHandler"/>.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.MessageDispatcher.Dispatch(Footloose.Messaging.Message)">
            <summary>
            Dispatches a incoming message to a registered <see cref="T:Footloose.Messaging.IMessageHandler"/> according to the
            messages's body type.
            </summary>
            <param name="message">The incoming <see cref="T:Footloose.Messaging.Message"/> object to dispatch.</param>
            <exception cref="T:Footloose.TransportChannels.MessageHandlerNotFoundException"><see cref="T:Footloose.Messaging.IMessageHandler"/> for specific <see cref="T:Footloose.Messaging.Message"/> is not found.</exception>
        </member>
        <member name="T:Footloose.TransportChannels.MessageHandlerNotFoundException">
            <summary>
            Represents errors that occur when no proper <see cref="T:Footloose.Messaging.IMessageHandler"/>
            is found while dispatching a incoming <see cref="T:Footloose.Messaging.Message"/>.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.MessageHandlerNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.MessageHandlerNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageHandlerNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageHandlerNotFoundException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageHandlerNotFoundException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageHandlerNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="T:Footloose.TransportChannels.MessageOriginator">
            <summary>
            This class defines a central dispatcher for outgoing messages with provided <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> objects.
            </summary>
            <remarks>
            <para>
            It dispatches the provided <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> to specialized <see cref="T:Footloose.Messaging.IMessageBuilder"/> classes that
            builds <see cref="T:Footloose.Messaging.Message"/> objects from the provided data.
            </para>
            <para>
            In the second step it coordinate the send process via the configured <see cref="T:Footloose.TransportChannels.ITransportChannel"/> in parallel async tasks.
            </para>
            </remarks>
        </member>
        <member name="M:Footloose.TransportChannels.MessageOriginator.#ctor(System.Collections.Generic.IEnumerable{System.Lazy{Footloose.Messaging.IMessageBuilder,Footloose.Configuration.Wiring.ITypeMetadata}},Footloose.TransportChannels.ITransportChannel)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.MessageOriginator"/> class with the provided
            <see cref="T:Footloose.Messaging.IMessageBuilder"/> and <see cref="T:Footloose.TransportChannels.ITransportChannel"/>.
            </summary>
            <param name="messageBuilders">The collection of lazy bound <see cref="T:Footloose.Messaging.IMessageBuilder"/>.</param>
            <param name="transportCannel">The <see cref="T:Footloose.TransportChannels.ITransportChannel"/>.</param>
        </member>
        <member name="M:Footloose.TransportChannels.MessageOriginator.EnqueueData(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData)">
            <summary>
            Enqueues the given <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient with the
            provided <see cref="T:System.Uri"/>.
            </summary>
            <param name="to">The <see cref="T:System.Uri"/> of the recipient.</param>
            <param name="data">The <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient.</param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="to"/> is null.</para> 
            -or-
            <para><paramref name="data"/> is null.</para>
            </exception>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.TransportChannels.MessageOriginator.EnqueueData(System.Uri,Footloose.DataModel.DataTransferObjects.IMessageBodyData,System.Threading.CancellationToken)">
            <summary>
            Enqueues the given <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient with the
            provided <see cref="T:System.Uri"/>.
            </summary>
            <param name="to">The <see cref="T:System.Uri"/> of the recipient.</param>
            <param name="data">The <see cref="T:Footloose.DataModel.DataTransferObjects.IMessageBodyData"/> for the recipient.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> that will be assigned to the new <see cref="T:System.Threading.Tasks.Task"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            <para><paramref name="to"/> is null.</para> 
            -or-
            <para><paramref name="data"/> is null.</para>
            </exception>
            <returns>The started <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Footloose.TransportChannels.MessageOriginator.EnqueueResponse(Footloose.Messaging.Message)">
            <summary>
            Enqueues a response <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Result"/> or <see cref="F:Footloose.Messaging.MessageType.Error"/>.
            </summary>
            <param name="response">The response <see cref="T:Footloose.Messaging.Message"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="response"/> is null.</exception>
        </member>
        <member name="M:Footloose.TransportChannels.MessageOriginator.NotifyMessageResult(System.String)">
            <summary>
            Notifies the <see cref="T:Footloose.TransportChannels.IMessageOriginator"/> that a <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Result"/>
            with the provided message id received.
            </summary>
            <param name="messageId">The id of the response <see cref="T:Footloose.Messaging.Message"/>.</param>
            <exception cref="T:System.ArgumentException"><paramref name="messageId"/> is null or empty.</exception>
        </member>
        <member name="M:Footloose.TransportChannels.MessageOriginator.NotifyMessageException(System.String,System.Exception)">
            <summary>
            Notifies the <see cref="T:Footloose.TransportChannels.IMessageOriginator"/> that a <see cref="T:Footloose.Messaging.Message"/> of type <see cref="F:Footloose.Messaging.MessageType.Error"/>
            with the provided message id and <see cref="T:System.Exception"/> received.
            </summary>
            <param name="messageId">The id of the response <see cref="T:Footloose.Messaging.Message"/>.</param>
            <param name="exception">The <see cref="T:System.Exception"/> from this error message.</param>
            <exception cref="T:System.ArgumentException"><paramref name="messageId"/> is null or empty.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="exception"/> is null.</exception>
        </member>
        <member name="M:Footloose.TransportChannels.MessageOriginator.SendMessage(Footloose.Messaging.Message,System.Threading.WaitHandle)">
            <summary>
            Sends a <see cref="T:Footloose.Messaging.Message"/> through the <see cref="T:Footloose.TransportChannels.ITransportChannel"/>.
            This method will block execution until the provided <see cref="T:System.Threading.WaitHandle"/>
            receives a signal or a timeout occurs.
            </summary>
            <param name="message">The <see cref="T:Footloose.Messaging.Message"/> to send.</param>
            <param name="messageResultSignal">The optional <see cref="T:System.Threading.WaitHandle"/>.</param>
            <returns>true if the message was successfuly send; otherwise false.</returns>
        </member>
        <member name="T:Footloose.TransportChannels.MessageOriginator.MessageStateData">
            <summary>
            Internal data structure to save state information
            about a single message.
            </summary>
        </member>
        <member name="T:Footloose.TransportChannels.NotAcceptableException">
            <summary>
            Represents errors that occur when the recipient understood the request but was not expecting it at this time
            or refusing to process it because it does not meet criteria defined by the recipient.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.NotAcceptableException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.NotAcceptableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Footloose.TransportChannels.NotAcceptableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
        </member>
        <member name="M:Footloose.TransportChannels.NotAcceptableException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.TransportChannels.NotAcceptableException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.NotAcceptableException"/> class
            with a specified error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference
            if no inner exception is specified.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Footloose.TransportChannels.NotAcceptableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.#ctor(Footloose.DataModel.EndpointIdentityDictionary,Footloose.DataModel.SelfEndpointIdentity,System.Func{System.Uri,Footloose.DataModel.EndpointIdentity},System.Lazy{Footloose.TransportChannels.IMessageOriginator},Footloose.Security.Cryptography.IHashAlgorithm)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager"/> class.
            </summary>
            <param name="endpointIdentityDictionary">The <see cref="T:Footloose.DataModel.EndpointIdentityDictionary"/>.</param>
            <param name="selfEndpointIdentity">The <see cref="P:Footloose.EndpointIdentityManagerBase.SelfEndpointIdentity"/>.</param>
            <param name="endpointIdentityFactory">The <see cref="T:Footloose.DataModel.EndpointIdentity"/> factory.</param>
            <param name="orginator">The <see cref="T:Footloose.TransportChannels.IMessageOriginator"/>.</param>
            <param name="hashAlgorithm">The <see cref="T:Footloose.Security.Cryptography.IHashAlgorithm"/>.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.RequestDiscoInfo(System.Uri,System.String)">
            <summary>
            Request asynchronously service discovery information from the given service with the specified capabilities.
            </summary>
            <param name="to">The service to request the disco information from.</param>
            <param name="capabilities">The provided capabilities of the service.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.AddEndpointIdentity(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Adds a new <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> and name
            and list of groups to the collection
            and request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
            <param name="requestSubscription">If true request subscription to the <see cref="T:Footloose.DataModel.IPresence"/> of
            the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>; otherwise just add the item to the collection.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.UpdateEndpointIdentity(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the name and list of groups of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="name">The name of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="groups">The list of groups the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> belongs to.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.RemoveEndpointIdentity(System.Uri)">
            <summary>
            Removes the <see cref="T:Footloose.DataModel.IEndpointIdentity"/> with the specified <see cref="T:System.Uri"/> from the collection
            and unsubcribe from the <see cref="T:Footloose.DataModel.IPresence"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.SendSubscribtionRequest(System.Uri,System.String)">
            <summary>
            Sends a subscription request with the specified reason
            to permanently subscribe to a identity's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
            <param name="reason">A reason that explains the subscription request.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.UnsubscribeFrom(System.Uri)">
            <summary>
            Unsubscribe from the identity's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.RevokeSubscriptionFrom(System.Uri)">
            <summary>
            Cancel and revoke the identity's subscription to this instance's presence information.
            </summary>
            <param name="to">The uri of the <see cref="T:Footloose.DataModel.IEndpointIdentity"/>.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager.SetDiscoInfo(Footloose.DataModel.DataTransferObjects.DiscoInfo)">
            <summary>
            Sets the service discovery information the transport channel should
            send on discovery requests.
            </summary>
            <param name="discoInfo">Service discovery information for this service node.</param>
        </member>
        <member name="T:Footloose.TransportChannels.Remoting.ServiceProxy">
            <summary>
            Represents a remoting service proxy object.
            </summary>
        </member>
        <member name="T:Footloose.TransportChannels.Remoting.IServiceProxy">
            <summary>
            Defines a remoting service proxy interface.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.IServiceProxy.SendMessage(Footloose.Messaging.Message)">
            <summary>
            Send the specified <see cref="T:Footloose.Messaging.Message" />
            to the remote service.
            </summary>
            <param name="mesage">A <see cref="T:Footloose.Messaging.Message" /> object to send.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.ServiceProxy.#ctor(System.Action{Footloose.Messaging.Message})">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.Remoting.ServiceProxy" /> class
            with the specified callback to handle incoming messages.
            </summary>
            <param name="callback"></param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.ServiceProxy.SendMessage(Footloose.Messaging.Message)">
            <summary>
            Send the specified <see cref="T:Footloose.Messaging.Message" />
            to the remote service.
            </summary>
            <param name="mesage">A <see cref="T:Footloose.Messaging.Message" /> object to send.</param>
        </member>
        <member name="T:Footloose.TransportChannels.Remoting.RemotingTransportChannel">
            <summary>
            Footloose transport channel that uses .NET Remoting for message transport
            </summary>
        </member>
        <member name="T:Footloose.TransportChannels.TransportChannelBase">
            <summary>
            A abstract base class for <see cref="T:Footloose.TransportChannels.ITransportChannel"/> implementations.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.#ctor(Footloose.Configuration.TransportChannelConfigurationSection,Footloose.TransportChannels.IMessageDispatcher,Footloose.IEndpointIdentityManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.TransportChannelBase"/> base class
            with the specified <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/> containing all required configuration parameters.</param>
            <param name="messageDispatcher">The <see cref="T:Footloose.TransportChannels.IMessageDispatcher"/> for this transport channel to handle incoming messages.</param>
            <param name="endpointIdentityManager">The <see cref="T:Footloose.IEndpointIdentityManager"/> for this transport channel.</param>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.Finalize">
            <summary>
            This destructor will run only if the Dispose method
            does not get called.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.Connect">
            <summary>
            Brings the transport channel online.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.Disconnect">
            <summary>
            Disconnects the transport channel.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.SetDiscoInfo(Footloose.DataModel.DataTransferObjects.DiscoInfo)">
            <summary>
            Sets the service discovery information the transport channel should
            send on discovery requests.
            </summary>
            <param name="discoInfo">Service discovery information for this service node.</param>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.SendMessage(Footloose.Messaging.Message)">
            <summary>
            Sends the specified message through this transport channel.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing,
            releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.TransportChannelBase.Dispose(System.Boolean)">
            <summary>
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">Indicator that the method as been called by user's code.</param>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.Configuration">
            <summary>
            Gets the <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/>.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.MessageDispatcher">
            <summary>
            Gets the <see cref="T:Footloose.TransportChannels.IMessageDispatcher"/> for this transport channel to handle incoming messages.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.IsConnected">
            <summary>
            Gets the current state of the connection.
            true if the connection is established; otherwise, false.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.EndpointIdentifier">
            <summary>
            Gets the identifier of this service node.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.ServiceUri">
            <summary>
            Gets the Uri of this service node.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.EndpointIdentityManager">
            <summary>
            Gets an instance of the <see cref="T:Footloose.IEndpointIdentityManager"/>.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.IsDisposed">
            <summary>
            Gets or sets a value indicating whether the class has been disposed of.
            true if the class has been disposed of; otherwise, false. 
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.MaxMessageBodyLength">
            <summary>
             Gets the maximum length of the message body. The serializised message body must not exceed the
             specified maximum message body lenght; otherwise it'll be strip down into several smaller chunks
             and send separately.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.Timeout">
            <summary>
            Gets or sets the length of time, in milliseconds, before a request times out.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.TransportChannelBase.Priority">
            <summary>
             Gets or sets the priority for this communication endpoint.
             The value must be an integer between -128 and +127.
             Default is 10.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingTransportChannel.#ctor(Footloose.Configuration.TransportChannelConfigurationSection,Footloose.TransportChannels.IMessageDispatcher,Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Footloose.TransportChannels.Remoting.RemotingTransportChannel"/> with the
            specified <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/>.
            </summary>
            <param name="configuration">The <see cref="T:Footloose.Configuration.TransportChannelConfigurationSection"/> for this transport channel.</param>
            <param name="messageDispatcher">The <see cref="T:Footloose.TransportChannels.IMessageDispatcher"/> for this transport channel to handle incoming messages.</param>
            <param name="endpointIdentityManager">The <see cref="T:Footloose.TransportChannels.Remoting.RemotingEndpointIdentityManager"/> for this transport channel.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingTransportChannel.Connect">
            <summary>
            Brings the transport channel online.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingTransportChannel.Disconnect">
            <summary>
            Disconnects the transport channel.
            </summary>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingTransportChannel.SetDiscoInfo(Footloose.DataModel.DataTransferObjects.DiscoInfo)">
            <summary>
            Sets the service discovery information the transport channel should
            send on discovery requests.
            </summary>
            <param name="discoInfo">Service discovery information for this service node.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingTransportChannel.SendMessage(Footloose.Messaging.Message)">
            <summary>
            Sends the specified message through this transport channel.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Footloose.TransportChannels.Remoting.RemotingTransportChannel.CreateFullEndpointUri(System.Uri,System.String)">
            <summary>
            Creates a full endpoint uri from a specified base uri.
            Example: "ipc://FootlooseService-1" to "ipc://FootlooseService-1/endpointIdentifier/FootlooseServiceProxy.rem"
            </summary>
            <param name="baseUri">The base <see cref="T:System.Uri"/>.</param>
            <param name="endpointIdentifier"></param>
            <returns>A full endpoint Uri for the <see cref="T:Footloose.TransportChannels.Remoting.RemotingTransportChannel"/>.</returns>
        </member>
        <member name="P:Footloose.TransportChannels.Remoting.RemotingTransportChannel.IsConnected">
            <summary>
            Gets the current state of the connection.
            true if the connection is established; otherwise, false.
            </summary>
        </member>
        <member name="P:Footloose.TransportChannels.Remoting.RemotingTransportChannel.ServiceUri">
            <summary>
            Gets the Uri of this service node.
            </summary>
        </member>
    </members>
</doc>
