<?xml version="1.0"?>
<doc>
    <assembly>
        <name>obj\Release-Mono-4.0\Rhino.Licensing</name>
    </assembly>
    <members>
        <member name="T:Rhino.Licensing.AbstractLicenseValidator">
            <summary>
            Base license validator.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.AbstractLicenseValidator.#ctor(System.String,System.DateTime)">
            <summary>
            Creates a license validator with specfied public key.
            </summary>
            <param name="publicKey">public key</param>
            <param name="productBuildDate">The build date of the product.</param>
        </member>
        <member name="F:Rhino.Licensing.AbstractLicenseValidator.logger">
            <summary>
            License validator logger
            </summary>
        </member>
        <member name="F:Rhino.Licensing.AbstractLicenseValidator.TimeServers">
            <summary>
            Standard Time servers
            </summary>
        </member>
        <member name="E:Rhino.Licensing.AbstractLicenseValidator.LicenseInvalidated">
            <summary>
            Fired when license data is invalidated
            </summary>
        </member>
        <member name="P:Rhino.Licensing.AbstractLicenseValidator.ExpirationDate">
            <summary>
            Gets the expiration date of the license
            </summary>
        </member>
        <member name="P:Rhino.Licensing.AbstractLicenseValidator.LicenseType">
            <summary>
            Gets the Type of the license
            </summary>
        </member>
        <member name="P:Rhino.Licensing.AbstractLicenseValidator.UserId">
            <summary>
            Gets the Id of the license holder
            </summary>
        </member>
        <member name="P:Rhino.Licensing.AbstractLicenseValidator.Name">
            <summary>
            Gets the name of the license holder
            </summary>
        </member>
        <member name="P:Rhino.Licensing.AbstractLicenseValidator.LicenseAttributes">
            <summary>
            Gets extra license information
            </summary>
        </member>
        <member name="P:Rhino.Licensing.AbstractLicenseValidator.License">
            <summary>
            Gets or Sets the license content
            </summary>
        </member>
        <member name="M:Rhino.Licensing.AbstractLicenseValidator.AssertValidLicense">
            <summary>
            Validates loaded license
            </summary>
        </member>
        <member name="M:Rhino.Licensing.AbstractLicenseValidator.TryLoadingLicenseValuesFromValidatedXml">
            <summary>
            Loads license data from validated license file.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:Rhino.Licensing.AbstractLicenseValidator.DisableFutureChecks">
            <summary>
            Disables further license checks for the session.
            </summary>
        </member>
        <member name="T:Rhino.Licensing.AssemblyBuildDateAttribute">
            <summary>
            Defines assembly build date information for an assembly manifest.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.AssemblyBuildDateAttribute.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Rhino.Licensing.AssemblyBuildDateAttribute" /> class
            with the specified build date.
            </summary>
            <param name="buildDate">The build date of the assembly.</param>
        </member>
        <member name="M:Rhino.Licensing.AssemblyBuildDateAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rhino.Licensing.AssemblyBuildDateAttribute" /> class
            with the specified build date string.
            </summary>
            <param name="buildDateString">The build date of the assembly.</param>
        </member>
        <member name="P:Rhino.Licensing.AssemblyBuildDateAttribute.BuildDate">
            <summary>
            Gets the assembly build date.
            </summary>
        </member>
        <member name="T:Rhino.Licensing.LicenseExpiredException">
            <summary>
            Thrown when license is found but is past it's expiration date
            </summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseExpiredException.#ctor">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseExpiredException.#ctor(System.String)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
            <param name="message">error message</param>
        </member>
        <member name="M:Rhino.Licensing.LicenseExpiredException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
            <param name="message">error message</param>
            <param name="inner">inner exception</param>
        </member>
        <member name="M:Rhino.Licensing.LicenseExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
            <param name="info">serialization information</param>
            <param name="context">streaming context</param>
        </member>
        <member name="T:Rhino.Licensing.InvalidationType">
            <summary>
            InvalidationType
            </summary>
        </member>
        <member name="F:Rhino.Licensing.InvalidationType.SupportAndSubscriptionExpired">
            <summary>
            Support and Subscription expired
            </summary>
        </member>
        <member name="F:Rhino.Licensing.InvalidationType.TrialTimeExpired">
            <summary>
            Trial License is expired
            </summary>
        </member>
        <member name="T:Rhino.Licensing.LicenseFileNotFoundException">
            <summary>
            Thrown when a valid license file can not be
            found on the client machine.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseFileNotFoundException.#ctor">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseFileNotFoundException" /></summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseFileNotFoundException.#ctor(System.String)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseFileNotFoundException" /></summary>
            <param name="message">error message</param>
        </member>
        <member name="M:Rhino.Licensing.LicenseFileNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseFileNotFoundException" /></summary>
            <param name="message">error message</param>
            <param name="inner">inner exception</param>
        </member>
        <member name="M:Rhino.Licensing.LicenseFileNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseFileNotFoundException" /></summary>
            <param name="info">serialization information</param>
            <param name="context">streaming context</param>
        </member>
        <member name="T:Rhino.Licensing.LicenseType">
            <summary>
            License Type
            </summary>
        </member>
        <member name="F:Rhino.Licensing.LicenseType.Trial">
            <summary>
            For trial use
            </summary>
        </member>
        <member name="F:Rhino.Licensing.LicenseType.Standard">
            <summary>
            Standard license
            </summary>
        </member>
        <member name="T:Rhino.Licensing.LicenseValidator">
            <summary>
            License validator validates a license file
            that can be located on disk.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseValidator.#ctor(System.String,System.DateTime,System.IO.FileInfo)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseValidator" />.
            </summary>
            <param name="publicKey">public key</param>
            <param name="productBuildDate">The build date of the product.</param>
            <param name="licenseFile">path to license file</param>
        </member>
        <member name="M:Rhino.Licensing.LicenseValidator.#ctor(System.String,System.DateTime,System.String)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseValidator" />.
            </summary>
            <param name="publicKey">public key</param>
            <param name="productBuildDate">The build date of the product.</param>
            <param name="license">license content</param>
        </member>
        <member name="P:Rhino.Licensing.LicenseValidator.License">
            <summary>
            Gets or Sets the license content
            </summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseValidator.AssertValidLicense">
            <summary>
            Validates loaded license
            </summary>
        </member>
        <member name="T:Rhino.Licensing.LicenseNotFoundException">
            <summary>
            Thrown when suitable license is not found.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseNotFoundException.#ctor">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseNotFoundException" />.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.LicenseNotFoundException.#ctor(System.String)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseNotFoundException" />.
            </summary>
            <param name="message">error message</param>
        </member>
        <member name="M:Rhino.Licensing.LicenseNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseNotFoundException" />.
            </summary>
            <param name="message">error message</param>
            <param name="inner">inner exception</param>
        </member>
        <member name="M:Rhino.Licensing.LicenseNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.LicenseNotFoundException" />.
            </summary>
            <param name="info">serialization information</param>
            <param name="context">steaming context</param>
        </member>
        <member name="T:Rhino.Licensing.RhinoLicensingException">
            <summary>
            Base class for all licensing exceptions.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.RhinoLicensingException.#ctor">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
        </member>
        <member name="M:Rhino.Licensing.RhinoLicensingException.#ctor(System.String)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
            <param name="message">error message</param>
        </member>
        <member name="M:Rhino.Licensing.RhinoLicensingException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
            <param name="message">error message</param>
            <param name="inner">inner exception</param>
        </member>
        <member name="M:Rhino.Licensing.RhinoLicensingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new instance of <seealso cref="T:Rhino.Licensing.RhinoLicensingException" />.
            </summary>
            <param name="info">serialization information</param>
            <param name="context">streaming context</param>
        </member>
    </members>
</doc>
